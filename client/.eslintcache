[{"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js":"1","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js":"2","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js":"3","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js":"4","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js":"5","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js":"6","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js":"7","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js":"8","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js":"9","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js":"10","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js":"11","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js":"12","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js":"13","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js":"14","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js":"15","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js":"16","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js":"17","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js":"18","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js":"19","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js":"20","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js":"21","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js":"22","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js":"23","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js":"24","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modal.js":"25","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/index.js":"26","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/App.js":"27","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/reportWebVitals.js":"28","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/AuthContext.js":"29","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/PortalContext.js":"30","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/FeedContext.js":"31","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/actions.js":"32","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/api/api.js":"33","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/Account.js":"34","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Feed.js":"35","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js":"36","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js":"37","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Modal.js":"38","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Navbar.js":"39","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/SideMenu.js":"40","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js":"41","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/helpers/helpers.js":"42","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js":"43","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js":"44","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js":"45","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js":"46","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js":"47","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/useForm.js":"48","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/validateEdit.js":"49","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/validateFields.js":"50","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/AboutModal.js":"51","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/HotcardModal.js":"52","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/LocationModal.js":"53","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/LoginModal.js":"54","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ConfirmModal.js":"55","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ForgotPassword.js":"56","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ChangePassword.js":"57"},{"size":875,"mtime":1607466488243,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":1606936230290,"results":"60","hashOfConfig":"59"},{"size":1581,"mtime":1612440254515,"results":"61","hashOfConfig":"59"},{"size":3298,"mtime":1612452783948,"results":"62","hashOfConfig":"59"},{"size":1737,"mtime":1610972957042,"results":"63","hashOfConfig":"59"},{"size":394,"mtime":1607464293348,"results":"64","hashOfConfig":"59"},{"size":4068,"mtime":1611028647222,"results":"65","hashOfConfig":"59"},{"size":789,"mtime":1607467198927,"results":"66","hashOfConfig":"59"},{"size":285,"mtime":1610972946898,"results":"67","hashOfConfig":"59"},{"size":5609,"mtime":1611028175572,"results":"68","hashOfConfig":"59"},{"size":994,"mtime":1607508004683,"results":"69","hashOfConfig":"59"},{"size":4743,"mtime":1609252771660,"results":"70","hashOfConfig":"59"},{"size":3982,"mtime":1610973035870,"results":"71","hashOfConfig":"59"},{"size":608,"mtime":1610539182842,"results":"72","hashOfConfig":"59"},{"size":7845,"mtime":1612176600176,"results":"73","hashOfConfig":"59"},{"size":3669,"mtime":1610966269889,"results":"74","hashOfConfig":"59"},{"size":7136,"mtime":1608466932536,"results":"75","hashOfConfig":"59"},{"size":8699,"mtime":1608922565908,"results":"76","hashOfConfig":"59"},{"size":4208,"mtime":1610542822485,"results":"77","hashOfConfig":"59"},{"size":566,"mtime":1609185755293,"results":"78","hashOfConfig":"59"},{"size":2497,"mtime":1610966795832,"results":"79","hashOfConfig":"59"},{"size":4666,"mtime":1610542872737,"results":"80","hashOfConfig":"59"},{"size":11861,"mtime":1610971887466,"results":"81","hashOfConfig":"59"},{"size":371,"mtime":1607508004680,"results":"82","hashOfConfig":"59"},{"size":6746,"mtime":1610902363173,"results":"83","hashOfConfig":"59"},{"size":875,"mtime":1607466488243,"results":"84","hashOfConfig":"85"},{"size":1470,"mtime":1610542146134,"results":"86","hashOfConfig":"85"},{"size":362,"mtime":1606936230290,"results":"87","hashOfConfig":"85"},{"size":1754,"mtime":1610539198150,"results":"88","hashOfConfig":"85"},{"size":789,"mtime":1607467198927,"results":"89","hashOfConfig":"85"},{"size":394,"mtime":1607464293348,"results":"90","hashOfConfig":"85"},{"size":262,"mtime":1608269950988,"results":"91","hashOfConfig":"85"},{"size":5810,"mtime":1609800499434,"results":"92","hashOfConfig":"85"},{"size":3602,"mtime":1609709827202,"results":"93","hashOfConfig":"85"},{"size":3588,"mtime":1609800601597,"results":"94","hashOfConfig":"85"},{"size":3507,"mtime":1610542783206,"results":"95","hashOfConfig":"85"},{"size":2523,"mtime":1609680564914,"results":"96","hashOfConfig":"85"},{"size":8559,"mtime":1609786541048,"results":"97","hashOfConfig":"85"},{"size":3295,"mtime":1609713131646,"results":"98","hashOfConfig":"85"},{"size":5316,"mtime":1609799041095,"results":"99","hashOfConfig":"85"},{"size":4666,"mtime":1610542872737,"results":"100","hashOfConfig":"85"},{"size":608,"mtime":1610539182842,"results":"101","hashOfConfig":"85"},{"size":12523,"mtime":1610490763157,"results":"102","hashOfConfig":"85"},{"size":566,"mtime":1609185755293,"results":"103","hashOfConfig":"85"},{"size":4208,"mtime":1610542822485,"results":"104","hashOfConfig":"85"},{"size":7136,"mtime":1608466932536,"results":"105","hashOfConfig":"85"},{"size":8699,"mtime":1608922565908,"results":"106","hashOfConfig":"85"},{"size":4743,"mtime":1609252771660,"results":"107","hashOfConfig":"85"},{"size":371,"mtime":1607508004680,"results":"108","hashOfConfig":"85"},{"size":994,"mtime":1607508004683,"results":"109","hashOfConfig":"85"},{"size":1308,"mtime":1612108695033,"results":"110","hashOfConfig":"59"},{"size":1310,"mtime":1612108795075,"results":"111","hashOfConfig":"59"},{"size":4267,"mtime":1612108892761,"results":"112","hashOfConfig":"59"},{"size":7615,"mtime":1612341974486,"results":"113","hashOfConfig":"59"},{"size":3339,"mtime":1612109079868,"results":"114","hashOfConfig":"59"},{"size":2953,"mtime":1612175523038,"results":"115","hashOfConfig":"59"},{"size":3268,"mtime":1612358766225,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1v6w62h",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"oyikmi",{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"179"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"179"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"179"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"179"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"179"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"179"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"119"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js",[],["248","249"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js",["250"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js",["251"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js",["252","253","254","255","256","257","258"],"import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.scss';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Toggle } from '../assets/toggle.svg';\r\nimport { ReactComponent as SearchBar } from '../assets/search.svg';\r\nimport { ReactComponent as Facebook } from '../assets/facebook.svg';\r\nimport { ReactComponent as Instagram } from '../assets/instagram.svg';\r\nimport { ReactComponent as Location } from '../assets/location.svg';\r\n\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\n// import { listPosts, searchPosts } from '../graphql/queries';\r\n\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { ACTIONS } from '../actions';\r\nexport default function Navbar({ auth }) {\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const [suggestions, setSuggestions] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const inputStatus = useRef(false);\r\n\r\n  // clear input search field\r\n  const inputRef = useRef(null);\r\n\r\n  const clearInput = () => {\r\n    inputRef.current.value = \"\";\r\n  }\r\n\r\n  // mobile search bar\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // open\r\n  const useMobileOutsideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setToggle(false);\r\n          // setToggle(false);\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const mobileRef = useRef(null);\r\n  useMobileOutsideHandler(mobileRef);\r\n  // end\r\n\r\n  const filterOffer = () => {\r\n    console.log('offers are filtering');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"nav-left\">\r\n          <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n          <img src={logo} alt=\"logo\" />\r\n          <div className=\"search-bar\">\r\n            <input ref={inputRef} type=\"search\" placeholder=\"Search\" />\r\n            {inputStatus.current ? <i onClick={() => clearInput()} className=\"fas fa-times\"></i> : <i className=\"fas fa-search\"></i>}\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-center\">\r\n        <div onClick={(e) => filterOffer} className=\"nav-mango-card\">\r\n            <p>OFFER</p>\r\n          </div>\r\n\r\n          <Link to=\"/ads/location\"><Location /></Link>\r\n\r\n          <Link to=\"/ads/hotcard\">\r\n            <div className=\"nav-mango-card\">\r\n              <p>HOTCARD</p>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"nav-right\">\r\n          <a href=\"https://www.facebook.com/hotbox.lk\" target=\"_blank\" rel=\"noreferrer\"><Facebook /></a>\r\n          <a target=\"_blank\" href=\"https://www.instagram.com/hotbox.srilanka\"><Instagram /></a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobile-top-nav\">\r\n        <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n        <SearchBar onClick={() => setToggle(!toggle)}  />\r\n        <img src={logo} alt=\"logo\" />\r\n        <a href=\"https://www.facebook.com/hotbox.lk\" target=\"_blank\" rel=\"noreferrer\"><Facebook /></a>\r\n        <a href=\"https://www.instagram.com/hotbox.srilanka\" target=\"_blank\" rel=\"noreferrer\"><Instagram /></a>\r\n      </div>\r\n\r\n      <div ref={mobileRef} className={`mobile-search-bar ${toggle ? `show` : `hide`} `}>\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </div>\r\n\r\n      <div className=\"mobile-bottom-nav\">\r\n        <Link to=\"/ads/hotcard\">\r\n          <div className=\"nav-mango-card\">\r\n            <p>HOTCARD</p>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/ads/location\"><Location /></Link>\r\n        <div className=\"nav-mango-card\">\r\n        <p>OFFER</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js",["259","260"],"import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport swal from 'sweetalert';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [slides, setSlide] = useState([{ url: '' }]);\r\n  const [thumbnail, setThumbnail] = useState({ url: '' });\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // validating selected files\r\n  const validateImage = (e) => {\r\n    // const filesArray = e.target.files;\r\n    const file = e.target.files[0];\r\n    const size = e.target.files[0].size;\r\n    const type = e.target.files[0].type;\r\n    const name = e.target.files[0].name;\r\n    // const extension = e.target.files[filesArray.length-1];\r\n\r\n    console.log(e.target.files);\r\n\r\n    // !e.target.files[0] ||\r\n    // !e.target.files[0].size ||\r\n    // !e.target.files[0].name.split(\".\")[1] ||\r\n    // !e.target.files[0].name.split(\".\")[0]\r\n\r\n    if (!file || !size || !type || !name) {\r\n\r\n      swal({\r\n        title: \"Error\",\r\n        text: \"File is not supported\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2500\r\n      });\r\n\r\n      return { error: 'error' }\r\n    } else {\r\n\r\n      // console.table(type);\r\n      /* check the file type */\r\n      if (type !== 'image/png' && type !== 'image/jpeg' && type !== 'image/jpg') {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Only .JPG and .PNG File Formats Allowed\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n        return { error: 'error' };\r\n      }\r\n\r\n      if (size > 1000000) {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Too Large. Image Should Be Less Than 1MB\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n  \r\n        return { error: 'error' }\r\n      }\r\n      \r\n      return { file , error: null };\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  const uploadImage = async (base64EncodedImage) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ data: base64EncodedImage }),\r\n          headers: {'Content-type': 'application/json'}\r\n        });\r\n        const data = await response.json();\r\n        resolve(data);\r\n      } catch(error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  // handle slide change\r\n  const handleSlide = (e, index) => {\r\n    e.preventDefault();\r\n    \r\n    const { file, error } = validateImage(e);\r\n    \r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // console.log('image - ', reader.result);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          const list = [...slides];\r\n          list[index]['url'] = reader.result;\r\n          setSlide(list);\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle thumbnail change\r\n  const handleThumbnail = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { file, error } = validateImage(e);\r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          // console.log(reader.result);\r\n          setThumbnail({ url: reader.result });\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle field array\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(thumbnail, slides));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  // handle field array\r\n  const handleRemoveClick = async (index, url) => {\r\n\r\n    // remove image item\r\n\r\n    // remove item from array\r\n    const list = [...slides];\r\n    list.splice(index, 1);\r\n    setSlide(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setSlide([...slides, { url: '' }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    imageLoading,\r\n    handleSlide,\r\n    handleThumbnail,\r\n    handleSubmit,\r\n    handleRemoveClick,\r\n    handleAddClick,\r\n    thumbnail,\r\n    slides,\r\n    setSlide,\r\n    setThumbnail,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js",["261"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport style from './account.module.scss';\r\nimport { textFilter } from '../../helpers/helpers';\r\n\r\nimport { getPostsByUser, updatePost } from '../../api/api';\r\nimport { ACTIONS } from '../../actions';\r\nexport default function Account() {\r\n\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fetchPostsByUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const allPosts = await getPostsByUser(state.user._id);\r\n      console.log(allPosts);\r\n      setPosts(allPosts);\r\n      setLoading(false);\r\n    } catch(error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPostsByUser();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem('accessToken');\r\n    history.push('/ads');\r\n    dispatch({ type: ACTIONS.LOGOUT });\r\n  }\r\n\r\n  return (\r\n    state.isAuthenticated && state.user && state.user.confirmed ?\r\n    <>\r\n      <div className={style.wrapper}>\r\n      <div className={style.header}>\r\n          <p>Profile</p>\r\n          <div className={style.email}>\r\n            <i className=\"fas fa-user\"></i>\r\n            <p>{state.user && textFilter(state.user.email, 17)}</p>\r\n          </div>\r\n          <Link to=\"/create\" className={style.createButton}>Post New Ad</Link>\r\n        </div>\r\n        {loading ? <Spinner /> : <AdItems posts={posts} fetchPostsByUser={fetchPostsByUser} />}\r\n        <button onClick={(e) => handleLogout(e)} className={style.logout}>Logout</button>\r\n      </div>\r\n    </>\r\n    :\r\n    <Redirect to=\"/ads/sign-in\" />\r\n  );\r\n}\r\n\r\nconst AdItems = ({ posts, fetchPostsByUser }) => {\r\n\r\n  const mutateOffers = async (item) => {\r\n    try {\r\n      const updateOffer = {\r\n          offer: !item.offer\r\n      }\r\n      const updatedPost = await updatePost(item._id, updateOffer);\r\n      console.log(updatedPost);\r\n      fetchPostsByUser();\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    posts.length > 0 ?\r\n    posts.map((item, index) => {\r\n      return (\r\n        <div key={index} className={style.body}>\r\n        <div className={style.accordion}>\r\n          <div\r\n            className={style.card}\r\n            data-toggle=\"collapse\"\r\n            data-target={`#collapseExample${index}`}\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseExample\"\r\n          >\r\n            <img src={item.thumbnail} alt=\"img\" />\r\n            <p>{item.brandName}</p>\r\n            <i class=\"fas fa-chevron-down\"></i>\r\n          </div>\r\n    \r\n          <div className={`collapse ${style.collapse}`} id={`collapseExample${index}`}>\r\n            <div className={style.collapseWrapper}>\r\n              <div className={style.views}>\r\n                <p className={style.viewsAmount}>{item.analytics}</p>\r\n                <p>clicks</p>\r\n              </div>\r\n              <div className={style.offers}>\r\n                <p>Offers</p>\r\n                <div onClick={() => mutateOffers(item)}>\r\n                  {item.offer ? <button className={style.enabled}>Enabled</button> : <button className={style.disabled}>Disabled</button> }\r\n                </div>\r\n              </div>\r\n              <div className={style.buttons}>\r\n                <Link to={`/account/${item._id}/edit`}><button>Edit</button></Link>\r\n                <Link to={`/ads/${item._id}`}><button>View</button></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    })\r\n  :\r\n    <p>Create Your First Ad</p>\r\n  );\r\n}\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js",["262"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport logo from '../../../assets/logo.png';\r\nimport './CreatePost.scss';\r\nimport { createPost } from '../../../api/api';\r\n\r\nimport FirstStep from './Steps/FirstStep';\r\nimport SecondStep from './Steps/SecondStep';\r\nimport ThirdStep from './Steps/ThirdStep';\r\nimport FourthStep from './Steps/FourthStep';\r\n\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nexport default function CreatePost() {\r\n    const [step, setStep] = useState(1);\r\n    const [firstValues, setFirstValues] = useState({});\r\n    const [secondValues, setSecondValues] = useState({});\r\n    const [thirdValues, setThirdValues] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { state } = useContext(AuthContext);\r\n\r\n    // useEffect(() => {\r\n    //   if () {\r\n    //   }\r\n    // }, [])\r\n\r\n    const submitData = async () => {\r\n      const { category } = firstValues;\r\n      \r\n      const {\r\n        brandName,\r\n        number,\r\n        website,\r\n        facebook,\r\n        instagram,\r\n        twitter,\r\n        branches  \r\n      } = secondValues;\r\n\r\n      const { thumbnail, slide } = thirdValues;\r\n\r\n      const values = {\r\n        analytics: 1,\r\n        brandName,\r\n        category,\r\n        number,\r\n        website,\r\n        facebook,\r\n        instagram,\r\n        twitter,\r\n        thumbnail,\r\n        slide,\r\n        branches\r\n      };\r\n\r\n      // console.log(values);\r\n      try {\r\n        // console.log(values);\r\n        setLoading(true);\r\n        await createPost(values);\r\n        setLoading(false);\r\n      } catch(error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    const FormBody = ({ step }) => {\r\n      // eslint-disable-next-line default-case\r\n      switch (step) {\r\n        case 1:\r\n          return <FirstStep setStep={setStep} setFirstValues={setFirstValues} />;\r\n        case 2:\r\n          return (\r\n            <SecondStep firstValues={firstValues} setStep={setStep} setSecondValues={setSecondValues} />\r\n          );\r\n  \r\n        case 3:\r\n          return (\r\n            <ThirdStep\r\n              setStep={setStep}\r\n              setThirdValues={setThirdValues}\r\n            />\r\n          );\r\n        case 4:\r\n          return <FourthStep loading={loading} setLoading={setLoading} submitData={submitData} />;\r\n      }\r\n    }\r\n\r\n    const Stepper = () => {\r\n      return (\r\n        <div className=\"step-wrapper\">\r\n          <Steps value={1}>Category</Steps>\r\n          <Steps value={2}>Information</Steps>\r\n          <Steps value={3}>Upload Media</Steps>\r\n          <Steps value={4}>Submit</Steps>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const Steps = ({ children, value }) => {\r\n      return (\r\n        <div className=\"step\">\r\n          {value < step ? (\r\n            <i className=\"fas fa-check-circle\"></i>\r\n          ) : value === step ? (\r\n            <i className=\"fas fa-circle\"></i>\r\n          ) : (\r\n            <i className=\"far fa-circle\"></i>\r\n          )}\r\n  \r\n          <h1>{children}</h1>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      state.isAuthenticated && state.user && state.user.confirmed &&\r\n      <div className=\"form-wrapper\">\r\n        <FormLeft>\r\n          <img src={logo} alt=\"mangofriend\" />\r\n          <Stepper step={step} />\r\n        </FormLeft>\r\n\r\n        <FormRight>\r\n          <FormBody step={step} />\r\n        </FormRight>\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction FormLeft({ children }) {\r\n  return <div className=\"form-left\">{children}</div>;\r\n}\r\n\r\nfunction FormRight({ children }) {\r\n  return <div className=\"form-right\">{children}</div>;\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js",["263"],"import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './ThirdStep.module.scss';\r\nimport useForm from '../../../../CustomForm/useForm';\r\nimport validate from '../../../../CustomForm/validateFields';\r\nimport { ReactSortable } from 'react-sortablejs';\r\n\r\nexport default function ThirdStep({ setStep, setThirdValues }) {\r\n\r\n  const [fieldError, setFieldError] = useState(false);\r\n  const {\r\n    imageLoading,\r\n    handleSlide,\r\n    handleThumbnail,\r\n    handleSubmit,\r\n    handleRemoveClick,\r\n    handleAddClick,\r\n    thumbnail,\r\n    slides,\r\n    setSlide,\r\n    errors,\r\n  } = useForm(submit, validate);\r\n\r\n  // form submission\r\n  function submit() {\r\n    const slidesArr = slides.map(slide => slide.url);\r\n    console.log('submitted slides', slidesArr);\r\n    console.log('thumbnail', thumbnail.url);\r\n    setThirdValues({ thumbnail: thumbnail.url, slide: slidesArr });\r\n    setStep(4);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    setFieldError(errors);\r\n    let timer = setTimeout(() => {\r\n      setFieldError({});\r\n    }, 3000)\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n  }, [errors]);\r\n\r\n  const Thumbnail = () => {\r\n    return (\r\n      <div className={style.thumbnailWrapper}>\r\n        <h1>Upload Post Thumbnail</h1>\r\n\r\n        {fieldError.thumbnail && (\r\n          <div className={`alert alert-danger ${style.error}`} role=\"alert\">\r\n            {fieldError.thumbnail}\r\n          </div>\r\n        )}\r\n        <div className={style.thumbnailItem}>\r\n          <div className=\"custom-file\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => handleThumbnail(e)}\r\n              className=\"custom-file-input\"\r\n              id=\"thumbnail\"\r\n            />\r\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n              Click here to select files\r\n            </label>\r\n          </div>\r\n          {thumbnail.url && <img draggable=\"false\" src={thumbnail.url} alt=\"uploaded\" />}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Thumbnail />\r\n\r\n      {imageLoading ? <h1>Loading...</h1> : null}\r\n\r\n      <div className={style.slideWrapper}>\r\n        <h1 onClick={() => console.log(slides)}>Upload Post Slider</h1>\r\n        <p>You can Move and Reorder your images</p>\r\n\r\n      {fieldError.slides && (\r\n        <div className={`alert alert-danger ${style.error}`} role=\"alert\">\r\n          {fieldError.slides}\r\n        </div>\r\n      )}\r\n\r\n      <ReactSortable list={slides} setList={setSlide} animation={200}>\r\n          {slides.map(({ url }, index) => (\r\n                <div className={style.slideItem} key={index}>\r\n                  <div className=\"custom-file\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={(e) => handleSlide(e, index)}\r\n                      className=\"custom-file-input\"\r\n                      id=\"slide\"\r\n                    />\r\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                      Click here to select files\r\n                    </label>\r\n                  </div>\r\n                  {url && <img draggable=\"false\" src={url} alt=\"image\" />}\r\n                  \r\n                  <div className={style.buttonWrapper}>\r\n                    {slides.length !== 1 && (\r\n                      <button onClick={() => handleRemoveClick(index, url)}>\r\n                        <i className=\"fas fa-minus\"></i>\r\n                      </button>\r\n                    )}\r\n\r\n                    {slides.length < 4\r\n                      ? slides.length - 1 === index &&\r\n                      (\r\n                        <button onClick={handleAddClick}>\r\n                          <i className=\"fas fa-plus\"></i>\r\n                        </button>\r\n                      )\r\n                      : null}\r\n                  </div>\r\n\r\n                </div>\r\n          ))}\r\n      </ReactSortable>\r\n      </div>\r\n\r\n      <div className={style.formFooterButtons}>\r\n        <button type=\"submit\" onClick={(e) => handleSubmit(e)}>Continue</button>\r\n        <Link to=\"/account\"><button>Cancel</button></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js",["264","265","266","267","268"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport style from './edit.module.scss';\r\nimport { Link, useParams, Redirect } from 'react-router-dom';\r\n\r\nimport Overview from './Overview';\r\nimport Gallery from './Gallery';\r\n\r\n// import { Form, Formik, FieldArray, useField } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// API\r\nimport { updatePost, getPostById } from '../../../api/api';\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\n\r\nexport default function Edit() {\r\n\r\n    const { state } = useContext(AuthContext);\r\n\r\n    const [page, setPage] = useState('overview');\r\n    const [loading, setLoading] = useState(true);\r\n    const [initialData, setInitialData] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await getPostById(id);\r\n        setInitialData(data);\r\n        setLoading(false);\r\n      }\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        state.isAuthenticated && state.user && state.user.confirmed &&\r\n        <>\r\n        {loading ?\r\n            <Spinner />\r\n        :\r\n            <div className={style.wrapper}>\r\n                <Navigation page={page} setPage={setPage} />\r\n                <Content page={page} setPage={setPage} initialData={initialData} currentPost={id} />\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst Navigation = ({ page, setPage }) => {\r\n    return (\r\n        <div className={style.navigation}>\r\n            <button className={page === 'overview' ? style.selected: undefined} onClick={() => setPage('overview')}>Overview</button>\r\n            <button className={page === 'gallery' ? style.selected: undefined} onClick={() => setPage('gallery')}>Gallery</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Content = ({ page, initialData, currentPost }) => {\r\n\r\n    const Page = () => {\r\n        switch (page) {\r\n            case 'overview':\r\n                return <Overview initialData={initialData} currentPost={currentPost} />                \r\n            case 'gallery':\r\n                return <Gallery initialData={initialData} currentPost={currentPost} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <Page />\r\n        </div>\r\n    );\r\n}\r\n\r\n// loading spinner\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js",["269"],"import React, { useEffect, useMemo } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ReactSortable } from 'react-sortablejs';\r\nimport useForm from '../../../CustomForm/useForm';\r\nimport validate from '../../../CustomForm/validateEdit';\r\nimport swal from 'sweetalert';\r\nimport upload from '../../../assets/upload.png';\r\nimport style from './edit.module.scss';\r\n\r\nimport { updatePost } from '../../../api/api';\r\n\r\nconst Gallery = ({ initialData, currentPost }) => {\r\n\r\n    const { post : { slide, thumbnail } } = initialData;\r\n\r\n    let history = useHistory();\r\n\r\n    // avoid ref equality\r\n    const MemSlide = useMemo(() => { \r\n      return { slide };\r\n    }\r\n    , [slide]);\r\n\r\n    // consuming use form hook\r\n    const { \r\n      handleSlide,\r\n      handleThumbnail,\r\n      handleSubmit,\r\n      handleRemoveClick,\r\n      handleAddClick,\r\n      slides,\r\n      thumbnail: initialThumbnail,\r\n      setSlide,\r\n      setThumbnail,\r\n      errors\r\n    } = useForm(submit, validate);\r\n\r\n    const handleUpdate = async (slidesArr, initialThumbnail) => {\r\n      const updateGallery = {\r\n        slide: slidesArr,\r\n        thumbnail: initialThumbnail.url\r\n      }\r\n      await updatePost(currentPost, updateGallery);\r\n      history.push('/account');\r\n    }\r\n\r\n    function submit() {\r\n      const slidesArr = slides.map(slide => slide.url);\r\n      handleUpdate(slidesArr, initialThumbnail);\r\n    }\r\n  \r\n  \r\n    const handleInitialState = (slide) => {\r\n      if (slide) {\r\n        const images = slide.map(item => {\r\n          return {url: item}\r\n        });\r\n  \r\n        setSlide(images);\r\n        setThumbnail({url: thumbnail})\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      handleInitialState(slide);\r\n    }, [MemSlide, thumbnail]);\r\n\r\n    useEffect(() => {\r\n      if (errors.slides) {\r\n      swal({\r\n        title: \"Error\",\r\n        text: errors.slides,\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2500\r\n      });\r\n    }\r\n    }, [errors])\r\n\r\n    const Thumbnail = () => {\r\n      return (\r\n        <div className={style.thumbnail}>\r\n          <h1>Thumbnail</h1>\r\n            {initialThumbnail && (<img src={initialThumbnail.url} alt=\"thumbnail\" />)}\r\n\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e) => handleThumbnail(e)}\r\n                  className=\"custom-file-input\"\r\n                />\r\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                  Upload\r\n                </label>\r\n              </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n      return (\r\n          <div className={style.gallery}>\r\n\r\n            <Thumbnail />\r\n            \r\n            <div className={style.slides}>\r\n              <h1 onClick={() => console.log(slides)}>Existing Slide</h1>\r\n                <ReactSortable className={style.slideImages} list={slides} setList={setSlide} animation={200}>\r\n                  {slides.map(({ url }, index) => url ? (\r\n                      <div className={style.card}>\r\n                        {url && <img src={url} alt=\"uploads\" />}\r\n                        <button className={style.cardButton} onClick={() => handleRemoveClick(index, url)}>Remove</button>\r\n                      </div>\r\n                  )\r\n                  : (\r\n                    <div className={style.uploadCard}>\r\n                      <div className=\"custom-file\">\r\n                        <input\r\n                          type=\"file\"\r\n                          onChange={(e) => handleSlide(e, index)}\r\n                          className=\"custom-file-input\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                          Upload\r\n                        </label>\r\n                      </div>\r\n\r\n                      <img src={upload} alt=\"uploads\" />\r\n                      \r\n                      <button className={style.cardButton} onClick={() => handleRemoveClick(index, url)}>Remove</button>\r\n                    </div>\r\n                  )\r\n                  )}\r\n                </ReactSortable>\r\n                {slides.length < 5 \r\n                ?  <div className={style.upload}>\r\n                <button onClick={handleAddClick}>Add</button>\r\n              </div> \r\n                : null}\r\n            </div>\r\n  \r\n\r\n\r\n            <div className={style.formFooterButtons}>\r\n                <button type=\"submit\" onClick={(e) => handleSubmit(e)}>Update Gallery</button>\r\n                <Link to=\"/account\"><button>Cancel</button></Link>\r\n            </div>\r\n          </div>\r\n      );\r\n}\r\n\r\nexport default Gallery;","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js",["270","271"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Formik, FieldArray, useField } from 'formik';\r\nimport {Link} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { updatePost } from '../../../api/api';\r\n// import { updateBranch, deleteBranch, createBranch, updatePost } from '../../../graphql/mutations';\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\nimport swal from 'sweetalert';\r\n\r\nimport style from './edit.module.scss';\r\n\r\n// import Options from '../FormOptions/Options';\r\n\r\nconst Overview = ({ initialData, currentPost }) => {\r\n\r\n    const { post } = initialData;\r\n    // const removeBranch = async (item) => {\r\n      // console.log('removed', item.id);\r\n      // const deletedBranch = await API.graphql(graphqlOperation(deleteBranch, {input : { id: item.id }}));\r\n      // console.log(deletedBranch);\r\n    // }\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n        {post &&\r\n        <Formik\r\n          initialValues={{\r\n            category: post.category,\r\n            brandName: post.brandName,\r\n            number: post.number,\r\n            website: post.website,\r\n            facebook: post.facebook,\r\n            instagram: post.instagram,\r\n            twitter: post.twitter,\r\n            branches: post.branches.map((branch) => {\r\n              return {\r\n                id: branch._id,\r\n                branchLocation: branch.branchLocation,\r\n                district: branch.district\r\n              }\r\n            }),\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            category: Yup.string().required(),\r\n            brandName: Yup.string().min(2).max(25).required('Required'),\r\n            number: Yup.string().min(2).max(12).required('Required'),\r\n            website: Yup.string()\r\n              .max(30)\r\n              .url('must be like https://www.site.com'),\r\n            facebook: Yup.string().max(50).url(),\r\n            instagram: Yup.string().max(50).url(),\r\n            twitter: Yup.string().max(50).url(),\r\n            branches: Yup.array()\r\n              .of(\r\n                Yup.object().shape({\r\n                  branchLocation: Yup.string()\r\n                    .max(60)\r\n                    .url('invalid url')\r\n                    .required('required'),\r\n                  district: Yup.string().required('required'),\r\n                })\r\n              )\r\n              .required('required :)')\r\n              .max(5, 'Maximum 5 branches'),\r\n          })}\r\n          onSubmit={async (values) => {\r\n            console.log(values);\r\n            try {\r\n              await updatePost(currentPost, values);\r\n            } catch(error) {\r\n              console.log(error);\r\n            }\r\n          }}\r\n        >\r\n          {({ values, errors }) => (\r\n            <Form>\r\n              <div className={style.overview}>\r\n                <div className={style.groupWrapper}>\r\n                  <h1>Ad Information</h1>\r\n                  <div className={style.formGroup}>\r\n                    <CategoryField\r\n                      label=\"Category\"\r\n                      type=\"text\"\r\n                      name=\"category\"\r\n                    />\r\n                    <TextField\r\n                      id=\"brandName\"\r\n                      name=\"brandName\"\r\n                      type=\"text\"\r\n                      label=\"Brand Name\"\r\n                    />\r\n                    <TextField\r\n                      id=\"number\"\r\n                      name=\"number\"\r\n                      type=\"number\"\r\n                      label=\"Phone Number\"\r\n                    />\r\n                    <TextField\r\n                      id=\"website\"\r\n                      name=\"website\"\r\n                      type=\"text\"\r\n                      label=\"Website\"\r\n                      placeholder=\"https://www.website.com\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className={style.groupWrapper}>\r\n                  <h1>Connect social media</h1>\r\n                  <div className={style.formGroup}>\r\n                    <TextField\r\n                      id=\"facebook\"\r\n                      name=\"facebook\"\r\n                      type=\"text\"\r\n                      label=\"Facebook\"\r\n                      placeholder=\"https://www.facebook.com/account\"\r\n                    />\r\n                    <TextField\r\n                      id=\"instagram\"\r\n                      name=\"instagram\"\r\n                      type=\"text\"\r\n                      label=\"Instagram\"\r\n                      placeholder=\"https://www.instagram.com/account\"\r\n                    />\r\n                    <TextField\r\n                      id=\"twitter\"\r\n                      name=\"twitter\"\r\n                      type=\"text\"\r\n                      label=\"Twitter\"\r\n                      placeholder=\"https://www.twitter.com/account\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <Options values={values} /> */}\r\n    \r\n                <div className={style.branchGroupWrapper}>\r\n                  <h1>Branches</h1>\r\n                  <p>You should at least have one branch. you can add up to 3</p>\r\n                  <FieldArray\r\n                    name=\"branches\"\r\n                    render={({ remove, push }) => (\r\n                      <div>\r\n                        {values.branches && values.branches.length > 0\r\n                          ? values.branches.map((friend, index) => (\r\n                              <div key={index} className={style.branchInput}>\r\n                                <TextField\r\n                                  label=\"Location\"\r\n                                  type=\"text\"\r\n                                  name={`branches.${index}.branchLocation`}\r\n                                />\r\n                                <DistrictField\r\n                                  label=\"District\"\r\n                                  type=\"text\"\r\n                                  name={`branches.${index}.district`}\r\n                                />\r\n                                {values.branches.length !== 1 && (\r\n                                  <div className={style.addButton}>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => remove(index)}\r\n                                    >\r\n                                      <i className=\"fas fa-minus\"></i>\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))\r\n                          : null}\r\n                        {values.branches.length !== 5 && (\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() =>\r\n                              push({\r\n                                branchLocation: '',\r\n                                district: '',\r\n                              })\r\n                            }\r\n                          >\r\n                            ADD\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className={style.formFooterButtons}>\r\n                  <button type=\"submit\">Update Overview</button>\r\n                  <Link to=\"/account\"><button>Cancel</button></Link>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\n// const Options = () => {\r\n// }\r\n\r\nconst TextField = ({ label, id, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n  \r\n    return (\r\n      <div>\r\n        <label>{label}</label>\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          className={`form-control ${\r\n            meta.touched && meta.error ? `is-invalid` : null\r\n          }`}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <div id={id} className=\"invalid-feedback\">\r\n            {meta.error}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n};\r\n\r\nconst DistrictField = ({ label, ...props }) => {\r\n    const [field] = useField(props);\r\n  \r\n    return (\r\n      <>\r\n        <div>\r\n          <label>{label}</label>\r\n          <select {...field} {...props} className=\"form-control\">\r\n            <option>Select Field</option>\r\n            <option value=\"ampara\">Ampara</option>\r\n            <option value=\"anuradhapura\">Anuradhapura</option>\r\n            <option value=\"badulla\">Badulla</option>\r\n            <option value=\"batticaloa\">Batticaloa</option>\r\n            <option value=\"colombo\">Colombo</option>\r\n            <option value=\"galle\">Galle</option>\r\n            <option value=\"gampaha\">Gampaha</option>\r\n            <option value=\"hambantota\">Hambantota</option>\r\n            <option value=\"jaffna\">Jaffna</option>\r\n            <option value=\"kalutara\">Kalutara</option>\r\n            <option value=\"kandy\">Kandy</option>\r\n            <option value=\"kegalle\">Kegalle</option>\r\n            <option value=\"kilinochchi\">Kilinochchi</option>\r\n            <option value=\"kurunegala\">Kurunegala</option>\r\n            <option value=\"mannar\">Mannar</option>\r\n            <option value=\"matale\">Matale</option>\r\n            <option value=\"matara\">Matara</option>\r\n            <option value=\"monaragala\">Monaragala</option>\r\n            <option value=\"mullativu\">Mullativu</option>\r\n            <option value=\"nuwaraEliya\">Nuwara Eliya</option>\r\n            <option value=\"polonnaruwa\">Polonnaruwa</option>\r\n            <option value=\"puttalam\">Puttalam</option>\r\n            <option value=\"ratnapura\">Ratnapura</option>\r\n            <option value=\"trincomalee\">Trincomalee</option>\r\n            <option value=\"vavuniya\">Vavuniya</option>\r\n          </select>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nconst CategoryField = ({ label, ...props }) => {\r\n    const [field] = useField(props);\r\n\r\n    return (\r\n        <div>\r\n        <label>{label}</label>\r\n        <select {...field} {...props} className=\"form-control\">\r\n            <option value=\"fashion\">Fashion</option>\r\n            <option value=\"restaurantsCafes\">Restaurants & Cafes</option>\r\n            <option value=\"spasSaloons\">Spas & Saloons</option>\r\n            <option value=\"fitness\">Fitness</option>\r\n            <option value=\"homemade\">Homemade</option>\r\n            <option value=\"services\">Services</option>\r\n            <option value=\"taxi\">Taxi</option>\r\n            <option value=\"entertainment\">Entertainment</option>\r\n            <option value=\"onlineStores\">Online stores</option>\r\n            <option value=\"finance\">Finance</option>\r\n            <option value=\"hospitals\">Hospitals</option>\r\n            <option value=\"essentials\">Essentials</option>\r\n            <option value=\"tours\">Tours</option>\r\n            <option value=\"hotels\">Hotels</option>\r\n            <option value=\"shoppingCentres\">Shopping Centres</option>\r\n            <option value=\"wineStores\">Wine Stores</option>\r\n            <option value=\"properties\">Properties</option>\r\n            <option value=\"furniture\">Furniture</option>\r\n            <option value=\"events\">Events</option>\r\n            <option value=\"florists\">Florists</option>\r\n            <option value=\"freelancers\">Freelancers</option>\r\n            <option value=\"electronics\">Electronics</option>\r\n            <option value=\"advertising\">Advertising</option>\r\n            <option value=\"toysFun\">Toys & Fun</option>\r\n            <option value=\"vehicles\">Vehicles</option>\r\n            <option value=\"hardware\">Hardware</option>\r\n            <option value=\"sports\">Sports</option>\r\n          </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modal.js",["272"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useParams, Link, useHistory, useLocation } from 'react-router-dom';\r\nimport style from './Modal.module.scss';\r\nimport { copyToClipboard } from '../helpers/helpers';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {Navigation, Pagination, Scrollbar, A11y} from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nimport swal from 'sweetalert';\r\n\r\n// modal assets\r\nimport { ReactComponent as Share } from '../assets/modal/share.svg';\r\nimport { ReactComponent as Call } from '../assets/modal/phone-btn.svg';\r\nimport { ReactComponent as Globe } from '../assets/modal/globe-btn.svg';\r\nimport { ReactComponent as Direction } from '../assets/modal/marker-2.svg';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\n\r\n// import halalLogo from '../assets/modal/options/halal.png';\r\nimport Facebook from '../assets/modal/options/facebook.png';\r\nimport Instagram from '../assets/modal/options/instagram.png';\r\nimport Twitter from '../assets/modal/options/twitter.png';\r\n\r\nimport { getPostById } from '../api/api';\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\nexport default function Modal({ isOpen, onClose }) {\r\n\r\n    const [activeBranch, setActiveBranch] = useState({});\r\n\r\n    const copy = (value) => {\r\n        copyToClipboard(value);\r\n        swal(\"Ad link copied to your clipboard\", {\r\n            title: 'Link Copied',\r\n            buttons: false,\r\n            timer: 2000,\r\n        });\r\n    }\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    let currentUrl = useLocation();\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { post } = await getPostById(id);\r\n            setData(post);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflow = \"hidden\";\r\n        fetchData();\r\n        return () => {\r\n            document.body.style.overflow = \"visible\";\r\n        }\r\n    }, []);\r\n\r\n    // document.querySelector('.wrapper').addEventListener('click')\r\n\r\n    let history = useHistory();\r\n\r\n    const handleClose = (e, includeClass) => {\r\n        typeof e.target.className === \"string\" && \r\n        e.target.className !== \"\" && \r\n        e.target.className.split(' ').includes(includeClass) && history.push('/ads');\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={(e) => handleClose(e, 'wrapper')} className={`${style.modalWrapper} wrapper`}>\r\n            <div className={style.modalBody}>\r\n            {loading \r\n                ? <Spinner />\r\n                : <>\r\n                <div className={style.heading}>\r\n                <p>{data.brandName && data.brandName}</p>\r\n                <Link to=\"/ads\"><Close onClick={onClose} /></Link>\r\n            </div>\r\n            <div className={style.secondRow}>\r\n                <div className={style.socialMedia}>\r\n                    <a href={data.facebook} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.facebook && <img src={Facebook} alt=\"facebook\" />}\r\n                    </a>\r\n                    <a href={data.instagram} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.instagram && <img src={Instagram} alt=\"instagram\" />}\r\n                    </a>\r\n                    <a href={data.twitter} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.twitter && <img src={Twitter} alt=\"twitter\" />}\r\n                    </a>\r\n                </div>\r\n                <div className={style.options}>\r\n   \r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.Slider}>\r\n                <Swiper\r\n                direction=\"horizontal\"\r\n                pagination={{clickable: true}}\r\n                Keyboard={{enabled: true, onlyInViewport: false}}\r\n                slidesPerView={1}\r\n                >\r\n                {data.slide && data.slide.map(img => (\r\n                    <SwiperSlide>\r\n                        <img src={img} alt=\"slide\" />\r\n                    </SwiperSlide>\r\n                ))}\r\n                </Swiper>\r\n            </div>\r\n            <div className={style.footer}>\r\n                <Dropdown branches={data.branches && data.branches} setActiveBranch={setActiveBranch} activeBranch={activeBranch} />\r\n                <div className={style.icon}>\r\n                    <a href={data.number ? `tel:${data.number}` : null}>\r\n                        <Call />\r\n                    </a>      \r\n                </div>\r\n                <div className={style.icon}>\r\n                    <a href={activeBranch.branchLocation ? activeBranch.branchLocation : null} target=\"_blank\" rel=\"noreferrer\">\r\n                        <Direction />\r\n                    </a>\r\n                </div>\r\n                <div className={style.icon}>\r\n                    <a href={data.website ? data.website : null} target=\"_blank\" rel=\"noreferrer\">\r\n                        <Globe />\r\n                    </a>\r\n                </div>\r\n                <div className={style.icon}>\r\n                    <div onClick={() => copy(`http://localhost:3000${currentUrl.pathname}`)} className=\"share-button\">\r\n                        <Share />\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            \r\n            <div className={style.offer}>\r\n                    <p className={data.offer ? style.available : style.unavailable}>OFFER</p>\r\n            </div>\r\n            \r\n            </>}\r\n            </div>\r\n        </div>,\r\n        document.getElementById('sideMenuPortal')\r\n    )\r\n}\r\n\r\nconst Dropdown = ({ branches, setActiveBranch, activeBranch }) => {\r\n    return (\r\n        <div class=\"dropdown\">\r\n        <button class={`btn btn-dark dropdown-toggle ${style.dropdownButton}`} type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            {branches && branches.map((branch) => (\r\n                    <div onClick={() => setActiveBranch(branch)} className=\"dropdown-item\">{branch.district}</div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n}","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/index.js",[],["273","274"],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/App.js",["275"],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/reportWebVitals.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/AuthContext.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/PortalContext.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Context/FeedContext.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/actions.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/api/api.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/Account.js",["276"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport style from './account.module.scss';\r\nimport { textFilter } from '../../helpers/helpers';\r\n\r\nimport { getPostsByUser, updatePost } from '../../api/api';\r\nexport default function Account() {\r\n\r\n  const { state } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fetchPostsByUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const allPosts = await getPostsByUser(state.user.user._id);\r\n      console.log(allPosts);\r\n      setPosts(allPosts);\r\n      setLoading(false);\r\n    } catch(error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPostsByUser();\r\n  }, []);\r\n\r\n  return (\r\n    state.isAuthenticated && state.user ?\r\n    <>\r\n      <div className={style.wrapper}>\r\n      <div className={style.header}>\r\n          <p>Profile</p>\r\n          <div className={style.email}>\r\n            <i className=\"fas fa-user\"></i>\r\n            <p>{state.user && textFilter(state.user.user.email, 17)}</p>\r\n          </div>\r\n          <Link to=\"/create\" className={style.createButton}>Post New Ad</Link>\r\n        </div>\r\n        {loading ? <Spinner /> : <AdItems posts={posts} fetchPostsByUser={fetchPostsByUser} />}\r\n      </div>\r\n    </>\r\n    :\r\n    <Redirect to=\"/ads/sign-in\" />\r\n  );\r\n}\r\n\r\nconst AdItems = ({ posts, fetchPostsByUser }) => {\r\n\r\n  const mutateOffers = async (item) => {\r\n    try {\r\n      const updateOffer = {\r\n          offer: !item.offer\r\n      }\r\n      const updatedPost = await updatePost(item._id, updateOffer);\r\n      console.log(updatedPost);\r\n      fetchPostsByUser();\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    posts.length > 0 ?\r\n    posts.map((item, index) => {\r\n      return (\r\n        <div key={index} className={style.body}>\r\n        <div className={style.accordion}>\r\n          <div\r\n            className={style.card}\r\n            data-toggle=\"collapse\"\r\n            data-target={`#collapseExample${index}`}\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseExample\"\r\n          >\r\n            <img src={item.thumbnail} alt=\"img\" />\r\n            <p>{item.brandName}</p>\r\n            <i class=\"fas fa-chevron-down\"></i>\r\n          </div>\r\n    \r\n          <div className={`collapse ${style.collapse}`} id={`collapseExample${index}`}>\r\n            <div className={style.collapseWrapper}>\r\n              <div className={style.views}>\r\n                <p className={style.viewsAmount}>{item.analytics}</p>\r\n                <p>clicks</p>\r\n              </div>\r\n              <div className={style.offers}>\r\n                <p>Offers</p>\r\n                <div onClick={() => mutateOffers(item)}>\r\n                  {item.offer ? <button className={style.enabled}>Enabled</button> : <button className={style.disabled}>Disabled</button> }\r\n                </div>\r\n              </div>\r\n              <div className={style.buttons}>\r\n                <Link to={`/account/${item._id}/edit`}><button>Edit</button></Link>\r\n                <Link to={`/ads/${item._id}`}><button>View</button></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    })\r\n  :\r\n    <p>Create Your First Ad</p>\r\n  );\r\n}\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Feed.js",["277","278","279","280"],"import React, { useEffect, useState, useMemo, useContext } from 'react';\r\nimport SideMenu from './SideMenu';\r\nimport Navbar from './Navbar';\r\nimport Modal from './Modal';\r\nimport LoginModal from './LoginModal';\r\n// import LocationModal from './LocationModal';\r\n\r\nimport './Feed.scss';\r\n\r\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { getAllPosts, getPostById, updateAnalytics } from '../api/api';\r\n\r\nexport default function Feed() {\r\n\r\n  const { feedData, setFeedData } = useContext(FeedContext);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { posts } = await getAllPosts();\r\n      setFeedData(posts)\r\n    } catch(error) {\r\n      console.log('error listing posts', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const { data } = await promise;\r\n//         setFeedData(data.listPosts);\r\n//       } catch (error) {\r\n//         console.log('error on listing posts', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//       API.cancel(promise, \"my message for cancellation\");\r\n//     }\r\n//   }, []);\r\n\r\n  /*\r\n  const updateAnalytics = async (currentId) => {\r\n    try {\r\n      // fetch post by id\r\n      const { data } = await API.graphql({ query: getPost, variables: { id: currentId }, authMode: 'AWS_IAM' });\r\n      // add click to analytics\r\n      const updateAnalytics = {\r\n        id: data.getPost.id,\r\n        analytics: parseInt(data.getPost.analytics) + 1\r\n      }\r\n      // update clicks\r\n      await API.graphql({ \r\n        query: updatePost, \r\n        variables: { input: updateAnalytics }, \r\n        authMode: 'AWS_IAM' \r\n      });\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleAdClick = (id) => {\r\n    updateAnalytics(id);\r\n    history.push(`/ads/${id}`);\r\n  }\r\n  */\r\n\r\n  const handleAnalytics = async (id) => {\r\n    try {\r\n      const { post: { analytics } } = await getPostById(id);\r\n      await updateAnalytics(id, analytics + 1);\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // fill 400 grid boxes with empty grey boxes\r\n  let gridItems = [];\r\n  const countingGrid = () => {\r\n    if (feedData && feedData.length < 50) {\r\n      let boxes = 400 - feedData.length;\r\n      for (let i = 0; i <= boxes; i++) {\r\n        gridItems.push(i);\r\n      }\r\n    } else {\r\n        for (let i = 0; i <= 400; i++) {\r\n            gridItems.push(i);\r\n        }\r\n    }\r\n  }\r\n\r\n  countingGrid();\r\n\r\n  let history = useHistory();\r\n\r\n  // open the ad modal\r\n  const handleClick = (id) => {\r\n    handleAnalytics(id);\r\n    history.push(`/ads/${id}`);\r\n  }\r\n  \r\n  return (\r\n      <div>\r\n          <Navbar />\r\n          <SideMenu />\r\n        {/* \r\n         */}\r\n          <div className=\"feed\">\r\n            <div className=\"image-list\">\r\n            {\r\n              feedData ? \r\n                feedData.map((item, index) => (\r\n                  <img key={index} onClick={() => handleClick(item._id)} src={item.thumbnail} alt=\"feedbox\"/>\r\n                ))\r\n              :\r\n                null\r\n            }\r\n          {gridItems.map((box, index) => <div key={index} className=\"grid\"></div>)}\r\n            </div>\r\n          </div>\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/ads/location\" component={LocationModal} /> */}\r\n          <Route path=\"/ads/sign-in\" component={LoginModal}/>\r\n          <Route path=\"/ads/:id\" component={Modal} />\r\n        </Switch> \r\n      </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js",["281","282","283","284"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport style from './edit.module.scss';\r\nimport { Link, useParams, Redirect } from 'react-router-dom';\r\n\r\nimport Overview from './Overview';\r\nimport Gallery from './Gallery';\r\n\r\n// import { Form, Formik, FieldArray, useField } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// API\r\nimport { updatePost, getPostById } from '../../../api/api';\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\n\r\nexport default function Edit() {\r\n\r\n    const { state } = useContext(AuthContext);\r\n\r\n    const [page, setPage] = useState('overview');\r\n    const [loading, setLoading] = useState(true);\r\n    const [initialData, setInitialData] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await getPostById(id);\r\n        setInitialData(data);\r\n        setLoading(false);\r\n      }\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        state.isAuthenticated && state.user ?\r\n        <>\r\n        {loading ?\r\n            <Spinner />\r\n        :\r\n            <div className={style.wrapper}>\r\n                <Navigation page={page} setPage={setPage} />\r\n                <Content page={page} setPage={setPage} initialData={initialData} currentPost={id} />\r\n            </div>\r\n        }\r\n        </>\r\n        :\r\n        <Redirect to=\"/ads/sign-in\" />\r\n    );\r\n}\r\n\r\nconst Navigation = ({ page, setPage }) => {\r\n    return (\r\n        <div className={style.navigation}>\r\n            <button className={page === 'overview' ? style.selected: undefined} onClick={() => setPage('overview')}>Overview</button>\r\n            <button className={page === 'gallery' ? style.selected: undefined} onClick={() => setPage('gallery')}>Gallery</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Content = ({ page, initialData, currentPost }) => {\r\n\r\n    const Page = () => {\r\n        switch (page) {\r\n            case 'overview':\r\n                return <Overview initialData={initialData} currentPost={currentPost} />                \r\n            case 'gallery':\r\n                return <Gallery initialData={initialData} currentPost={currentPost} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <Page />\r\n        </div>\r\n    );\r\n}\r\n\r\n// loading spinner\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Modal.js",["285","286"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useParams, Link, useHistory, useLocation } from 'react-router-dom';\r\nimport style from './Modal.module.scss';\r\nimport { copyToClipboard } from '../helpers/helpers';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {Navigation, Pagination, Scrollbar, A11y} from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nimport swal from 'sweetalert';\r\n\r\n// modal assets\r\nimport { ReactComponent as Share } from '../assets/modal/share.svg';\r\nimport { ReactComponent as Call } from '../assets/modal/phone-btn.svg';\r\nimport { ReactComponent as Globe } from '../assets/modal/globe-btn.svg';\r\nimport { ReactComponent as Direction } from '../assets/modal/marker-2.svg';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\n\r\n// import halalLogo from '../assets/modal/options/halal.png';\r\nimport Facebook from '../assets/modal/options/facebook.png';\r\nimport Instagram from '../assets/modal/options/instagram.png';\r\nimport Twitter from '../assets/modal/options/twitter.png';\r\n\r\nimport { getPostById } from '../api/api';\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\nexport default function Modal({ isOpen, onClose }) {\r\n\r\n    const [activeBranch, setActiveBranch] = useState({});\r\n\r\n    const copy = (value) => {\r\n        copyToClipboard(value);\r\n        swal(\"Ad link copied to your clipboard\", {\r\n            title: 'Link Copied',\r\n            buttons: false,\r\n            timer: 2000,\r\n        });\r\n    }\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    let currentUrl = useLocation();\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { post } = await getPostById(id);\r\n            setData(post);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflow = \"hidden\";\r\n        fetchData();\r\n        return () => {\r\n            document.body.style.overflow = \"visible\";\r\n        }\r\n    }, []);\r\n\r\n    // document.querySelector('.wrapper').addEventListener('click')\r\n\r\n    let history = useHistory();\r\n\r\n    const handleClose = (e, includeClass) => {\r\n        typeof e.target.className === \"string\" && \r\n        e.target.className !== \"\" && \r\n        e.target.className.split(' ').includes(includeClass) && history.push('/ads');\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={(e) => handleClose(e, 'wrapper')} className={`${style.modalWrapper} wrapper`}>\r\n            <div className={style.modalBody}>\r\n            {loading \r\n                ? <Spinner />\r\n                : <><div className={style.heading}>\r\n                <p>{data.brandName && data.brandName}</p>\r\n                <Link to=\"/ads\"><Close onClick={onClose} /></Link>\r\n            </div>\r\n            <div className={style.secondRow}>\r\n                <div className={style.socialMedia}>\r\n                    <a href={data.facebook} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.facebook && <img src={Facebook} alt=\"facebook\" />}\r\n                    </a>\r\n                    <a href={data.instagram} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.instagram && <img src={Instagram} alt=\"instagram\" />}\r\n                    </a>\r\n                    <a href={data.twitter} target=\"_blank\" rel=\"noreferrer\">\r\n                        {data.twitter && <img src={Twitter} alt=\"twitter\" />}\r\n                    </a>\r\n                </div>\r\n                <div className={style.options}>\r\n   \r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.Slider}>\r\n                <Swiper\r\n                direction=\"horizontal\"\r\n                pagination={{clickable: true}}\r\n                Keyboard={{enabled: true, onlyInViewport: false}}\r\n                slidesPerView={1}\r\n                >\r\n                {data.slide && data.slide.map(img => (\r\n                    <SwiperSlide>\r\n                        <img src={img} alt=\"slide\" />\r\n                    </SwiperSlide>\r\n                ))}\r\n                </Swiper>\r\n            </div>\r\n            <div className={style.footer}>\r\n                <Dropdown branches={data.branches && data.branches} setActiveBranch={setActiveBranch} activeBranch={activeBranch} />\r\n                <div className={style.icon}>\r\n                    <a href={data.number ? `tel:${data.number}` : null}>\r\n                        <Call />\r\n                    </a>      \r\n                </div>\r\n                <div className={style.icon}>\r\n                    <a href={activeBranch.branchLocation ? activeBranch.branchLocation : null} target=\"_blank\" rel=\"noreferrer\">\r\n                        <Direction />\r\n                    </a>\r\n                </div>\r\n                <div className={style.icon}>\r\n                    <a href={data.website ? data.website : null} target=\"_blank\" rel=\"noreferrer\">\r\n                        <Globe />\r\n                    </a>\r\n                </div>\r\n                <div className={style.icon}>\r\n                    <div onClick={() => copy(`http://localhost:3000${currentUrl.pathname}`)} className=\"share-button\">\r\n                        <Share />\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            \r\n            <div className={style.offer}>\r\n                    <p className={data.offer ? style.available : style.unavailable}>OFFER</p>\r\n            </div>\r\n            \r\n            </>}\r\n            </div>\r\n        </div>,\r\n        document.getElementById('sideMenuPortal')\r\n    )\r\n}\r\n\r\nconst Dropdown = ({ branches, setActiveBranch, activeBranch }) => {\r\n    return (\r\n        <div class=\"dropdown\">\r\n        <button class={`btn btn-dark dropdown-toggle ${style.dropdownButton}`} type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            {branches && branches.map((branch) => (\r\n                    <div onClick={() => setActiveBranch(branch)} className=\"dropdown-item\">{branch.district}</div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n}\r\n\r\n                 {/* {data && data.options && data.options.map(optionItem => {\r\n                        switch (optionItem.option) {\r\n                            case 'airbnb':\r\n                                return <a href={optionItem.url} target=\"_blank\"><img src={airbnbLogo} alt=\"optionLogo\" /></a>           \r\n                            case 'booking':\r\n                                return <a href={optionItem.url} target=\"_blank\"><img src={bookingLogo} alt=\"optionLogo\" /></a>\r\n                            case 'trivago':\r\n                                return <a href={optionItem.url} target=\"_blank\"><img src={trivagoLogo} alt=\"optionLogo\" /></a>\r\n                            case 'pickme' :\r\n                                return <img src={pickmeLogo} alt=\"optionLogo\" />\r\n                            case 'uber' :\r\n                                return <img src={uberLogo} alt=\"optionLogo\" />\r\n                            case 'deliver' :\r\n                                return <img src={deliverLogo} alt=\"optionLogo\" />\r\n                            case 'halal' :\r\n                                return <img src={halalLogo} alt=\"optionLogo\" />                            \r\n                            default:\r\n                                return null;\r\n                                break;\r\n                        }\r\n                    })} \r\n                    {data.pickme && <img src={Pickme} alt=\"option\" />}\r\n                    {data.uber && <img src={Uber} alt=\"option\" />}\r\n                    {data.wedeliver && <img src={WeDeliver} alt=\"option\" />}\r\n                    {data.airbnb && <img src={Airbnb} alt=\"option\" />}                    \r\n                    {data.agoda && <img src={Agoda} alt=\"option\" />}\r\n                    {data.booking && <img src={Booking} alt=\"option\" />} */}","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Navbar.js",["287","288","289","290","291","292"],"import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.scss';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Toggle } from '../assets/toggle.svg';\r\nimport { ReactComponent as SearchBar } from '../assets/search.svg';\r\nimport { ReactComponent as Facebook } from '../assets/facebook.svg';\r\nimport { ReactComponent as Instagram } from '../assets/instagram.svg';\r\nimport { ReactComponent as Location } from '../assets/location.svg';\r\n\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\n// import { listPosts, searchPosts } from '../graphql/queries';\r\n\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { ACTIONS } from '../actions';\r\nexport default function Navbar({ auth }) {\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const [suggestions, setSuggestions] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const inputStatus = useRef(false);\r\n\r\n  // clear input search field\r\n  const inputRef = useRef(null);\r\n\r\n  const clearInput = () => {\r\n    inputRef.current.value = \"\";\r\n  }\r\n\r\n  // mobile search bar\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // open\r\n  const useMobileOutsideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setToggle(false);\r\n          // setToggle(false);\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const mobileRef = useRef(null);\r\n  useMobileOutsideHandler(mobileRef);\r\n  // end\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"nav-left\">\r\n          <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n          <img src={logo} alt=\"logo\" />\r\n          <div className=\"search-bar\">\r\n            <input ref={inputRef} type=\"search\" placeholder=\"Search\" />\r\n            {inputStatus.current ? <i onClick={() => clearInput()} className=\"fas fa-times\"></i> : <i className=\"fas fa-search\"></i>}\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-center\">\r\n          <Link to=\"/ads/location\"><Location /></Link>\r\n        </div>\r\n\r\n        <div className=\"nav-right\">\r\n          <Facebook onClick={() => console.log(suggestions.items)} />\r\n          <a target=\"_blank\" href=\"https://www.instagram.com/hotbox.srilanka\"><Instagram /></a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobile-top-nav\">\r\n        <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n        <SearchBar onClick={() => setToggle(!toggle)}  />\r\n        <img src={logo} alt=\"logo\" />\r\n        <Facebook />\r\n        <Instagram />\r\n      </div>\r\n\r\n      <div ref={mobileRef} className={`mobile-search-bar ${toggle ? `show` : `hide`} `}>\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </div>\r\n\r\n      <div className=\"mobile-bottom-nav\">\r\n        <Link to=\"/ads/location\"><Location /></Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/SideMenu.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js",["293"],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/helpers/helpers.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js",["294"],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/useForm.js",["295","296"],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/validateEdit.js",[],"/mnt/c/Users/Lakshan/Desktop/Projects/development/hotbox-app/client/src/CustomForm/validateFields.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/AboutModal.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/HotcardModal.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/LocationModal.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/LoginModal.js",["297"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport style from './LoginModal.module.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { Formik, useField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport swal from 'sweetalert';\r\n\r\nimport { AuthContext } from '../../Context/AuthContext';\r\n\r\nimport logo from '../../assets/logo.png';\r\nimport { ReactComponent as Close } from '../../assets/close-icon.svg';\r\nimport { ACTIONS } from '../../actions';\r\nimport { registerRequest, signInRequest } from '../../api/api';\r\n\r\nexport default function LoginModal() {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { state, dispatch } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const handleLogin = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await signInRequest(values);\r\n            if (data.user.confirmed) {\r\n                localStorage.setItem('accessToken', data.accessToken);\r\n                dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data.user });\r\n                setLoading(false);\r\n                history.push('/account');\r\n            } else {\r\n                history.push('/ads/confirm');\r\n            }\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSignUp = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            await registerRequest(values);\r\n            // dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data });\r\n            // localStorage.setItem('accessToken', data.accessToken);\r\n            console.log('sign up success');\r\n            setLoading(false);\r\n            history.push('/ads/confirm');\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if user logged in redirecting to the account\r\n        if (state.isAuthenticated && state.user) {\r\n            // confirm\r\n            if (state.user.confirmed) {\r\n                history.push('/account');\r\n            }\r\n        }\r\n\r\n        document.body.style.overflow = \"hidden\";\r\n        return () => {\r\n            document.body.style.overflow = \"visible\";\r\n        }\r\n    }, []);\r\n\r\n    const [componentState, setComponentState] = useState('signin');\r\n\r\n    const handleClose = (e, includeClass) => {\r\n        typeof e.target.className === \"string\" && \r\n        e.target.className !== \"\" && \r\n        e.target.className.split(' ').includes(includeClass) && history.push('/ads');\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={(e) => handleClose(e, 'wrapper')} className={`${style.modalWrapper} wrapper`}>\r\n            <div className={style.modalBody}>\r\n                {componentState === 'signin' \r\n                ? <SignIn \r\n                    loading={loading} \r\n                    handleLogin={handleLogin} \r\n                    setComponentState={setComponentState} \r\n                />\r\n                : <SignUp\r\n                    loading={loading}\r\n                    handleSignUp={handleSignUp} \r\n                    setComponentState={setComponentState} />\r\n                }\r\n            </div>\r\n        </div>,\r\n        document.getElementById('sideMenuPortal')\r\n    );\r\n}\r\n\r\nconst SignIn = ({ setComponentState, handleLogin, loading }) => {\r\n\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        : \r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Sign In to</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleLogin(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Login</button>\r\n                    </Form>\r\n                </Formik>\r\n                <button onClick={() => setComponentState('signup')}>Create Account</button>\r\n                <Link to=\"/ads/forgotPassword\">Forgot Password ?</Link>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst SignUp = ({ setComponentState, loading, handleSignUp }) => {\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        :\r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Create Account</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleSignUp(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                </Formik>\r\n                <Link to=\"/ads/forgotPassword\">Forgot Password ?</Link>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst TextField = ({id, label, ...props}) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...field} {...props} className={`form-control ${meta.touched && meta.error ? `is-invalid` : null}`} />\r\n            {meta.touched && meta.error ? (\r\n                <div id={id} className=\"invalid-feedback\">\r\n                    {meta.error}\r\n                </div>\r\n            ): null}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n}\r\n\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ConfirmModal.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ForgotPassword.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Modals/ChangePassword.js",[],{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":40,"column":6,"nodeType":"304","endLine":40,"endColumn":8,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"306","line":36,"column":6,"nodeType":"304","endLine":36,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":21,"column":11,"nodeType":"310","messageId":"311","endLine":21,"endColumn":16},{"ruleId":"308","severity":1,"message":"312","line":23,"column":11,"nodeType":"310","messageId":"311","endLine":23,"endColumn":22},{"ruleId":"308","severity":1,"message":"313","line":25,"column":10,"nodeType":"310","messageId":"311","endLine":25,"endColumn":21},{"ruleId":"308","severity":1,"message":"314","line":25,"column":23,"nodeType":"310","messageId":"311","endLine":25,"endColumn":37},{"ruleId":"308","severity":1,"message":"315","line":27,"column":10,"nodeType":"310","messageId":"311","endLine":27,"endColumn":17},{"ruleId":"308","severity":1,"message":"316","line":27,"column":19,"nodeType":"310","messageId":"311","endLine":27,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":94,"column":14,"nodeType":"319","endLine":94,"endColumn":29},{"ruleId":"308","severity":1,"message":"320","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":22},{"ruleId":"302","severity":1,"message":"321","line":173,"column":6,"nodeType":"304","endLine":173,"endColumn":14,"suggestions":"322"},{"ruleId":"302","severity":1,"message":"323","line":30,"column":6,"nodeType":"304","endLine":30,"endColumn":8,"suggestions":"324"},{"ruleId":"308","severity":1,"message":"325","line":1,"column":39,"nodeType":"310","messageId":"311","endLine":1,"endColumn":48},{"ruleId":"326","severity":1,"message":"327","line":102,"column":27,"nodeType":"328","endLine":102,"endColumn":74},{"ruleId":"308","severity":1,"message":"329","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":14},{"ruleId":"308","severity":1,"message":"330","line":3,"column":27,"nodeType":"310","messageId":"311","endLine":3,"endColumn":35},{"ruleId":"308","severity":1,"message":"331","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":20},{"ruleId":"302","severity":1,"message":"332","line":33,"column":8,"nodeType":"304","endLine":33,"endColumn":10,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":62,"column":9,"nodeType":"336","messageId":"337","endLine":67,"endColumn":10},{"ruleId":"302","severity":1,"message":"338","line":66,"column":8,"nodeType":"304","endLine":66,"endColumn":29,"suggestions":"339"},{"ruleId":"308","severity":1,"message":"340","line":9,"column":8,"nodeType":"310","messageId":"311","endLine":9,"endColumn":12},{"ruleId":"308","severity":1,"message":"341","line":24,"column":9,"nodeType":"310","messageId":"311","endLine":24,"endColumn":16},{"ruleId":"302","severity":1,"message":"306","line":70,"column":8,"nodeType":"304","endLine":70,"endColumn":10,"suggestions":"342"},{"ruleId":"298","replacedBy":"343"},{"ruleId":"300","replacedBy":"344"},{"ruleId":"302","severity":1,"message":"303","line":33,"column":6,"nodeType":"304","endLine":33,"endColumn":8,"suggestions":"345"},{"ruleId":"302","severity":1,"message":"323","line":29,"column":6,"nodeType":"304","endLine":29,"endColumn":8,"suggestions":"346"},{"ruleId":"308","severity":1,"message":"347","line":1,"column":28,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"348","line":1,"column":38,"nodeType":"310","messageId":"311","endLine":1,"endColumn":45},{"ruleId":"308","severity":1,"message":"329","line":10,"column":10,"nodeType":"310","messageId":"311","endLine":10,"endColumn":14},{"ruleId":"302","severity":1,"message":"306","line":31,"column":6,"nodeType":"304","endLine":31,"endColumn":8,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"329","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":14},{"ruleId":"308","severity":1,"message":"331","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":20},{"ruleId":"302","severity":1,"message":"332","line":33,"column":8,"nodeType":"304","endLine":33,"endColumn":10,"suggestions":"350"},{"ruleId":"334","severity":1,"message":"335","line":64,"column":9,"nodeType":"336","messageId":"337","endLine":69,"endColumn":10},{"ruleId":"302","severity":1,"message":"306","line":70,"column":8,"nodeType":"304","endLine":70,"endColumn":10,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":182,"column":18,"nodeType":"354","messageId":"355","endLine":208,"endColumn":77},{"ruleId":"308","severity":1,"message":"309","line":21,"column":11,"nodeType":"310","messageId":"311","endLine":21,"endColumn":16},{"ruleId":"308","severity":1,"message":"312","line":23,"column":11,"nodeType":"310","messageId":"311","endLine":23,"endColumn":22},{"ruleId":"308","severity":1,"message":"314","line":25,"column":23,"nodeType":"310","messageId":"311","endLine":25,"endColumn":37},{"ruleId":"308","severity":1,"message":"315","line":27,"column":10,"nodeType":"310","messageId":"311","endLine":27,"endColumn":17},{"ruleId":"308","severity":1,"message":"316","line":27,"column":19,"nodeType":"310","messageId":"311","endLine":27,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":82,"column":14,"nodeType":"319","endLine":82,"endColumn":29},{"ruleId":"302","severity":1,"message":"338","line":66,"column":8,"nodeType":"304","endLine":66,"endColumn":29,"suggestions":"356"},{"ruleId":"326","severity":1,"message":"327","line":102,"column":27,"nodeType":"328","endLine":102,"endColumn":74},{"ruleId":"308","severity":1,"message":"320","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":22},{"ruleId":"302","severity":1,"message":"321","line":173,"column":6,"nodeType":"304","endLine":173,"endColumn":14,"suggestions":"357"},{"ruleId":"302","severity":1,"message":"358","line":85,"column":8,"nodeType":"304","endLine":85,"endColumn":10,"suggestions":"359"},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["363"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'setFeedData' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'setSuggestions' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'uuidv4' is defined but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["364"],"React Hook useEffect has a missing dependency: 'fetchPostsByUser'. Either include it or remove the dependency array.",["365"],"'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'Redirect' is defined but never used.","'updatePost' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["366"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'handleInitialState' and 'slide'. Either include them or remove the dependency array.",["367"],"'swal' is defined but never used.","'history' is assigned a value but never used.",["368"],["360"],["361"],["369"],["370"],"'useState' is defined but never used.","'useMemo' is defined but never used.",["371"],["372"],["373"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["374"],["375"],"React Hook useEffect has missing dependencies: 'history', 'state.isAuthenticated', and 'state.user'. Either include them or remove the dependency array.",["376"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"379","fix":"389"},{"desc":"377","fix":"390"},{"desc":"383","fix":"391"},{"desc":"379","fix":"392"},{"desc":"385","fix":"393"},{"desc":"379","fix":"394"},{"desc":"387","fix":"395"},{"desc":"381","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [loadUser]",{"range":"399","text":"400"},"Update the dependencies array to be: [fetchData]",{"range":"401","text":"402"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"403","text":"404"},"Update the dependencies array to be: [fetchPostsByUser]",{"range":"405","text":"406"},"Update the dependencies array to be: [id]",{"range":"407","text":"408"},"Update the dependencies array to be: [MemSlide, handleInitialState, slide, thumbnail]",{"range":"409","text":"410"},{"range":"411","text":"402"},{"range":"412","text":"400"},{"range":"413","text":"406"},{"range":"414","text":"402"},{"range":"415","text":"408"},{"range":"416","text":"402"},{"range":"417","text":"410"},{"range":"418","text":"404"},"Update the dependencies array to be: [history, state.isAuthenticated, state.user]",{"range":"419","text":"420"},[1099,1101],"[loadUser]",[1116,1118],"[fetchData]",[4481,4489],"[callback, errors, isSubmitting]",[940,942],"[fetchPostsByUser]",[960,962],"[id]",[1734,1755],"[MemSlide, handleInitialState, slide, thumbnail]",[2344,2346],[989,991],[881,883],[840,842],[960,962],[2344,2346],[1734,1755],[4481,4489],[2778,2780],"[history, state.isAuthenticated, state.user]"]