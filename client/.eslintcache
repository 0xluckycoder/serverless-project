[{"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js":"1","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js":"2","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js":"3","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js":"4","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/SignUp.js":"5","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Form.js":"6","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js":"7","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js":"8","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js":"9","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js":"10","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js":"11","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js":"12","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js":"13","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js":"14","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/LoginModal.js":"15","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js":"16","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js":"17","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js":"18","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js":"19","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js":"20","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js":"21","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js":"22","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js":"23","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js":"24","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js":"25","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js":"26","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js":"27"},{"size":875,"mtime":1607466488243,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1606936230290,"results":"30","hashOfConfig":"29"},{"size":3080,"mtime":1609513682073,"results":"31","hashOfConfig":"29"},{"size":3297,"mtime":1607547538812,"results":"32","hashOfConfig":"29"},{"size":2130,"mtime":1607457307056,"results":"33","hashOfConfig":"29"},{"size":456,"mtime":1607463283287,"results":"34","hashOfConfig":"29"},{"size":1764,"mtime":1608285641751,"results":"35","hashOfConfig":"29"},{"size":394,"mtime":1607464293348,"results":"36","hashOfConfig":"29"},{"size":7154,"mtime":1607592491894,"results":"37","hashOfConfig":"29"},{"size":789,"mtime":1607467198927,"results":"38","hashOfConfig":"29"},{"size":262,"mtime":1608269950988,"results":"39","hashOfConfig":"29"},{"size":5536,"mtime":1607468941418,"results":"40","hashOfConfig":"29"},{"size":994,"mtime":1607508004683,"results":"41","hashOfConfig":"29"},{"size":4743,"mtime":1609252771660,"results":"42","hashOfConfig":"29"},{"size":7613,"mtime":1609312779913,"results":"43","hashOfConfig":"29"},{"size":3566,"mtime":1609574859722,"results":"44","hashOfConfig":"29"},{"size":648,"mtime":1607565675314,"results":"45","hashOfConfig":"29"},{"size":4139,"mtime":1609583022470,"results":"46","hashOfConfig":"29"},{"size":3721,"mtime":1609598520739,"results":"47","hashOfConfig":"29"},{"size":7136,"mtime":1608466932536,"results":"48","hashOfConfig":"29"},{"size":8699,"mtime":1608922565908,"results":"49","hashOfConfig":"29"},{"size":4209,"mtime":1609596138303,"results":"50","hashOfConfig":"29"},{"size":566,"mtime":1609185755293,"results":"51","hashOfConfig":"29"},{"size":2617,"mtime":1609599500880,"results":"52","hashOfConfig":"29"},{"size":5403,"mtime":1609589961777,"results":"53","hashOfConfig":"29"},{"size":15366,"mtime":1609516842288,"results":"54","hashOfConfig":"29"},{"size":371,"mtime":1607508004680,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1v6w62h",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js",[],["122","123"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js",["124","125"],"import React, { useEffect, useContext } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Feed from './Components/Feed';\n// import Login from './Components/Auth/Login';\n// import SignUp from './Components/Auth/SignUp';\n// import Form from './Components/Form';\n// import ThirdStep from './Components/Auth/ThirdStep';\nimport Account from './Components/Auth/Account';\nimport Edit from './Components/Auth/EditPost/Edit';\n\n// import { getUser } from './api/api';\n\n/*\nimport SignUp from './Components/Auth/SignUp';\nimport Account from './Components/Auth/Account';\nimport VerifyAccount from './Components/VerifyAccount';\nimport Location from './Components/LocationModal';\nimport Edit from './Components/Auth/EditPost/Edit';\nimport Modal from './Components/Modal';\n\nimport NotFound from './Components/NotFound';\n\nimport FeedContextProvider from './Context/FeedContext';\n\n*/\nimport CreatePost from './Components/Auth/CreatePost/CreatePost';\n\n\nimport { AuthContext } from './Context/AuthContext';\nimport { ACTIONS } from './actions';\nimport { verifyToken } from './api/api';\n\nexport default function App() {\n\n  const { dispatch, state } = useContext(AuthContext);\n\n  // const fetchUser = async () => {\n  //   setUserLoading(true);\n  //   if (data.error) {\n  //     setAuthStatus(false);\n  //     setUser(null);\n  //     setUserLoading(false);\n  //   } else {\n  //     setAuthStatus(true);\n  //     setUser(data);\n  //     setUserLoading(false);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   fetchUser();\n  // }, [])\n\n  const loadUser = async () => {\n    try {\n      dispatch({ type: ACTIONS.USER_LOADING });\n      const data = await verifyToken();\n      if (data) {\n        dispatch({ type: ACTIONS.USER_LOADED, payload: data });\n      }\n      console.log('user load success', data);\n    } catch(error) {\n      if (error) dispatch({ type: ACTIONS.AUTH_ERROR });\n      console.log('no auth user', error);\n    }\n  }\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  // most specific routes first then least specific routes\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <><Redirect to=\"/ads\" /></>} />\n          <Route path=\"/ads\" component={Feed} />\n          {/* <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} /> */}\n          {/* <Route path=\"/form\" component={ThirdStep} /> */}\n          {/* <Route path=\"/form\" component={Form} /> */}\n          <Route path=\"/account/:id/edit\" component={Edit} />\n          <Route path=\"/account\" component={Account} />\n          <Route path=\"/create\" component={CreatePost} />\n          {/* <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n\n\n          <Route path=\"/create\">\n            <CreatePost />\n          </Route>\n          <Route path=\"/confirm\" component={VerifyAccount} />\n          <Route path=\"*\">\n            <NotFound />\n          </Route> */}\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js",["126","127","128","129","130","131","132"],"import React, { useEffect, useState, useMemo, useContext } from 'react';\r\nimport SideMenu from './SideMenu';\r\nimport Navbar from './Navbar';\r\n// import Modal from './Modal';\r\nimport LoginModal from './LoginModal';\r\n// import LocationModal from './LocationModal';\r\n\r\nimport './Feed.scss';\r\n\r\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../Context/AuthContext'; \r\n\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\n// import { getPost, listPosts } from '../graphql/queries';\r\n// import { updatePost } from '../graphql/mutations';\r\n\r\nexport default function Feed() {\r\n\r\n//   const promise = API.graphql({query: listPosts, authMode: 'AWS_IAM'});\r\n\r\n  const { feedData, setFeedData } = useContext(FeedContext);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const { data } = await promise;\r\n//         setFeedData(data.listPosts);\r\n//       } catch (error) {\r\n//         console.log('error on listing posts', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//       API.cancel(promise, \"my message for cancellation\");\r\n//     }\r\n//   }, []);\r\n\r\n  /*\r\n  const updateAnalytics = async (currentId) => {\r\n    try {\r\n      // fetch post by id\r\n      const { data } = await API.graphql({ query: getPost, variables: { id: currentId }, authMode: 'AWS_IAM' });\r\n      // add click to analytics\r\n      const updateAnalytics = {\r\n        id: data.getPost.id,\r\n        analytics: parseInt(data.getPost.analytics) + 1\r\n      }\r\n      // update clicks\r\n      await API.graphql({ \r\n        query: updatePost, \r\n        variables: { input: updateAnalytics }, \r\n        authMode: 'AWS_IAM' \r\n      });\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleAdClick = (id) => {\r\n    updateAnalytics(id);\r\n    history.push(`/ads/${id}`);\r\n  }\r\n  */\r\n\r\n  let history = useHistory();\r\n\r\n\r\n  let gridItems = [];\r\n\r\n  const countingGrid = () => {\r\n    if (feedData.items && feedData.items.length < 50) {\r\n      let boxes = 400 - feedData.items.length;\r\n\r\n      console.log('boxes', boxes);\r\n\r\n      for (let i = 0; i <= boxes; i++) {\r\n        gridItems.push(i);\r\n      }\r\n      \r\n    } else {\r\n        for (let i = 0; i <= 400; i++) {\r\n            gridItems.push(i);\r\n        }\r\n    }\r\n  }\r\n\r\n  countingGrid();\r\n  \r\n  return (\r\n      <div>\r\n          <Navbar />\r\n          <SideMenu />\r\n        {/* \r\n         */}\r\n          <div className=\"feed\">\r\n            <div className=\"image-list\">\r\n            {feedData.items ? feedData.items.map((item, index) => (\r\n              <img key={index} \r\n              /* onClick={() => handleAdClick(item.id)} */ \r\n              src={`https://res.cloudinary.com/dw2wcjhod/image/fetch/w_100,h_100,q_auto/${item.thumbnail}`} alt=\"feedbox\"/>\r\n            ))\r\n          : null}\r\n          {gridItems.map((box, index) => <div key={index} className=\"grid\"></div>)}\r\n            </div>\r\n          </div>\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/ads/location\" component={LocationModal} /> */}\r\n          <Route path=\"/ads/sign-in\" component={LoginModal}/>\r\n          {/* <Route path=\"/ads/:id\" component={Modal} /> */}\r\n        </Switch> \r\n      </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/SignUp.js",[],["133","134"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Form.js",[],["135","136"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js",["137"],"import React, { createContext, useReducer ,useState } from 'react';\r\nimport { ACTIONS } from '../actions';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case ACTIONS.USER_LOADING:\r\n          return state = {\r\n              ...state,\r\n              isLoading: true\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.USER_LOADED:\r\n          return state = {\r\n              ...state,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              user: action.payload\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.AUTH_SUCCESS:\r\n          // setLocalStorage(action.payload)\r\n          return state = {\r\n              ...state,\r\n              ...action.payload,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              user: action.payload\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.AUTH_ERROR:\r\n          localStorage.removeItem('token');\r\n          return state = {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              isAuthenticated: false,\r\n              isLoading: false\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n      token: localStorage.getItem('token'),\r\n      isAuthenticated: null,\r\n      isLoading: false,\r\n      user: null\r\n  });\r\n\r\n  return (\r\n      <AuthContext.Provider value={{ state, dispatch }}>\r\n          {children}\r\n      </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js",["138","139","140","141","142","143","144","145"],"import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.scss';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Toggle } from '../assets/toggle.svg';\r\nimport { ReactComponent as SearchBar } from '../assets/search.svg';\r\nimport { ReactComponent as Facebook } from '../assets/facebook.svg';\r\nimport { ReactComponent as Instagram } from '../assets/instagram.svg';\r\nimport { ReactComponent as Location } from '../assets/location.svg';\r\n\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\n// import { listPosts, searchPosts } from '../graphql/queries';\r\n\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { ACTIONS } from '../actions';\r\nexport default function Navbar({ auth }) {\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const [suggestions, setSuggestions] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const inputStatus = useRef(false);\r\n\r\n  /*\r\n  const handleInput = async (e) => {\r\n    setLoading(true);\r\n    if (e.target.value === \"\") {\r\n      inputStatus.current = false;\r\n      setSuggestions({}); \r\n    } else {\r\n      // hide the search icon\r\n      inputStatus.current = true;\r\n      try {\r\n        const { data } = await API.graphql({ query: searchPosts, authMode: 'AWS_IAM', variables: { filter: { brand_name: { matchPhrasePrefix: e.target.value }} } });\r\n        setSuggestions(data.searchPosts);\r\n      } catch (error) {\r\n        console.log('error on searching' ,error);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n  */\r\n\r\n\r\n  const handleSearchButton = (item) => {\r\n    console.log('hello world');\r\n    // setFeedData({items: [item]});\r\n  }\r\n\r\n  /*\r\n  const handleLogoClick = async () => {\r\n    try {\r\n      const { data } = await API.graphql({query: listPosts, authMode: 'AWS_IAM'});\r\n      setFeedData(data.listPosts);\r\n    } catch (error) {\r\n      console.log('error listing posts click logo', error);\r\n    }\r\n  }\r\n  */\r\n\r\n  // clear input search field\r\n  const inputRef = useRef(null);\r\n\r\n  const clearInput = () => {\r\n    inputRef.current.value = \"\";\r\n  }\r\n\r\n  // mobile search bar\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // open\r\n  const useMobileOutsideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setToggle(false);\r\n          // setToggle(false);\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const mobileRef = useRef(null);\r\n  useMobileOutsideHandler(mobileRef);\r\n  // end\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"nav-left\">\r\n          <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n          <img /* onClick={() => handleLogoClick()} */ src={logo} alt=\"logo\" />\r\n          <div className=\"search-bar\">\r\n            <input ref={inputRef} /* onChange={(e) => handleInput(e)} */ type=\"search\" placeholder=\"Search\" />\r\n            {inputStatus.current ? <i onClick={() => clearInput()} className=\"fas fa-times\"></i> : <i className=\"fas fa-search\"></i>}\r\n          </div>\r\n          {/* {loading\r\n          // search bar loading spinner \r\n          ? <div className=\"suggestions-box\">\r\n             <Spinner />\r\n            </div> \r\n            // desktop suggestions box\r\n          : <DesktopSuggestions suggestions={suggestions} setSuggestions={setSuggestions}  handleSearchButton={handleSearchButton} />} */}\r\n\r\n        </div>\r\n        <div className=\"nav-center\">\r\n          <Link to=\"/ads/location\"><Location /></Link>\r\n          <div className=\"nav-mango-card\">\r\n            <p>HOTCARD</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"nav-right\">\r\n          <Facebook onClick={() => console.log(suggestions.items)} />\r\n          <a target=\"_blank\" href=\"https://www.instagram.com/hotbox.srilanka\"><Instagram /></a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobile-top-nav\">\r\n        <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n        <SearchBar onClick={() => setToggle(!toggle)}  />\r\n        <img /*onClick={() => handleLogoClick()}*/ src={logo} alt=\"logo\" />\r\n        <Facebook />\r\n        <Instagram />\r\n      </div>\r\n\r\n      <div ref={mobileRef} className={`mobile-search-bar ${toggle ? `show` : `hide`} `}>\r\n        <input /*onChange={(e) => handleInput(e)} */ type=\"text\" placeholder=\"Search\" />\r\n        {/* {loading \r\n          ? null\r\n          : <MobileSuggestions suggestions={suggestions} setSuggestions={setSuggestions} handleSearchButton={handleSearchButton} setToggle={setToggle} />} */}\r\n      </div>\r\n\r\n      <div className=\"mobile-bottom-nav\">\r\n        <Link to=\"/ads/location\"><Location /></Link>\r\n        {/* <div className=\"nav-mango-card\">\r\n          <p>MANGO CARD</p>\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// const MobileSuggestions = ({ suggestions, setSuggestions, handleSearchButton, setToggle }) => {\r\n\r\n//   return (\r\n//     <div className={`${suggestions.items ? `mobile-suggestions-box` : `suggestions-hide`}`}>\r\n//       {suggestions.items && suggestions.items.map((item, index) => (\r\n//         <>\r\n//         <div className=\"mobile-search-item\" key={index} onClick={() => handleSearchButton(item)}>\r\n//           <p>{item.brand_name}</p>\r\n//           <i className=\"fas fa-search\"></i>\r\n//         </div>\r\n//         </>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const DesktopSuggestions = ({ suggestions, setSuggestions, handleSearchButton }) => {\r\n\r\n//   const [hide, setHide] = useState(false);\r\n\r\n//   // handling suggestion box outside click\r\n//   const useOutsideHandler = (ref) => {\r\n//     useEffect(() => {\r\n\r\n//       const handleOutsideClick = (event) => {\r\n//         if (ref.current && !ref.current.contains(event.target)) {\r\n//           setHide(true);\r\n//         }\r\n//       }\r\n//       document.addEventListener(\"mousedown\", handleOutsideClick);\r\n//       return () => {\r\n//         document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n//       }\r\n//     }, [ref]);\r\n//   }\r\n\r\n//   const wrapperRef = useRef(null);\r\n//   useOutsideHandler(wrapperRef);\r\n\r\n//   return (\r\n//     <div ref={wrapperRef} className={`${suggestions.items ? `suggestions-box`: `suggestions-hide`} ${hide && 'suggestions-hide'}`}>\r\n//       {suggestions.items && suggestions.items.map((item, index) => (\r\n//         <div className=\"search-item\" key={index} onClick={() => handleSearchButton(item)}>\r\n//           <p>{item.brand_name}</p>\r\n//           <i className=\"fas fa-search\"></i>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"search-spinner spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js",["146"],"import React, { useContext, useRef, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './SideMenu.scss';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\nimport { ACTIONS } from '../actions';\r\n\r\n// import { API } from 'aws-amplify';\r\n// import { postsByCategory } from '../graphql/queries';\r\n\r\n// consume context\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nexport default function SideMenu() {\r\n\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const useOutSideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n        }\r\n      }\r\n  \r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const menuRef = useRef(null);\r\n  useOutSideHandler(menuRef);\r\n    \r\n  return ReactDOM.createPortal(\r\n    <div ref={menuRef}\r\n      className={`${\r\n        state.sideMenu ? `side-menu-wrapper show-menu` : `side-menu-wrapper`\r\n      }`}\r\n    >\r\n      <MenuHeading\r\n        icon={<Close onClick={() => dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })} />}\r\n      >\r\n        Hotbox.lk\r\n      </MenuHeading>\r\n      <MenuItem>About us</MenuItem>\r\n      <Link to=\"/ads/sign-in\"><MenuItem>Sign in</MenuItem></Link>\r\n      <MenuHeading>CATEGORIES</MenuHeading>\r\n      <MenuItem categoryValue=\"fashion\" icon={<i className=\"fas fa-tshirt\"></i>}>Fashion</MenuItem>\r\n      <MenuItem categoryValue=\"restaurantsCafes\" icon={<i className=\"fas fa-utensils\"></i>}>Restaurants & Cafes</MenuItem>\r\n      <MenuItem categoryValue=\"spasSaloons\" icon={<i className=\"fas fa-cut\"></i>}>Spas & Saloons</MenuItem>\r\n      <MenuItem categoryValue=\"homemade\" icon={<i className=\"fas fa-hand-paper\"></i>}>Homemade</MenuItem>\r\n      <MenuItem categoryValue=\"services\" icon={<i className=\"fas fa-circle\"></i>}>Services</MenuItem>\r\n      <MenuItem categoryValue=\"taxi\" icon={<i className=\"fas fa-taxi\"></i>}>Taxi</MenuItem>\r\n      <MenuItem categoryValue=\"entertainment\" icon={<i className=\"fas fa-compact-disc\"></i>}>Entertainment</MenuItem>\r\n      <MenuItem categoryValue=\"onlineStores\" icon={<i className=\"fas fa-shopping-cart\"></i>}>Online stores</MenuItem>\r\n      <MenuItem categoryValue=\"finance\" icon={<i className=\"fas fa-hand-holding-usd\"></i>}>Finance</MenuItem>\r\n      <MenuItem categoryValue=\"hospitals\" icon={<i className=\"fas fa-stethoscope\"></i>}>Hospitals</MenuItem>\r\n      <MenuItem categoryValue=\"essentials\" icon={<i className=\"fas fa-circle\"></i>}>Essentials</MenuItem>\r\n      <MenuItem categoryValue=\"tours\" icon={<i className=\"fas fa-plane\"></i>}>Tours</MenuItem>\r\n      <MenuItem categoryValue=\"hotels\" icon={<i className=\"fas fa-hotel\"></i>}>Hotels</MenuItem>\r\n      <MenuItem categoryValue=\"shoppingCentres\" icon={<i className=\"fas fa-store\"></i>}>Shopping Centres</MenuItem>\r\n      <MenuItem categoryValue=\"wineStores\" icon={<i className=\"fas fa-wine-bottle\"></i>}>Wine Stores</MenuItem>\r\n      <MenuItem categoryValue=\"properties\" icon={<i className=\"fas fa-home\"></i>}>Properties</MenuItem>\r\n      <MenuItem categoryValue=\"furniture\" icon={<i className=\"fas fa-couch\"></i>}>Furniture</MenuItem>\r\n      <MenuItem categoryValue=\"events\" icon={<i className=\"far fa-calendar-alt\"></i>}>Events</MenuItem>\r\n      <MenuItem categoryValue=\"florists\" icon={<i className=\"fas fa-circle\"></i>}>Florists</MenuItem>\r\n      <MenuItem categoryValue=\"freelancers\" icon={<i className=\"fas fa-briefcase\"></i>}>Freelancers</MenuItem>\r\n      <MenuItem categoryValue=\"electronics\" icon={<i className=\"fas fa-cog\"></i>}>Electronics</MenuItem>\r\n      <MenuItem categoryValue=\"advertising\" icon={<i className=\"fas fa-ad\"></i>}>Advertising</MenuItem>\r\n      <MenuItem categoryValue=\"toysFun\" icon={<i className=\"fas fa-baby\"></i>}>Toys & Fun</MenuItem>\r\n      <MenuItem categoryValue=\"vehicles\" icon={<i className=\"fas fa-car\"></i>}>Vehicles</MenuItem>\r\n      <MenuItem categoryValue=\"hardware\" icon={<i className=\"fas fa-tools\"></i>}>Hardware</MenuItem>\r\n      <MenuItem categoryValue=\"sports\" icon={<i className=\"fas fa-futbol\"></i>}>Sports</MenuItem>\r\n    </div>,\r\n    document.getElementById('sideMenuPortal')\r\n  );\r\n}\r\n\r\nfunction MenuHeading({ children, icon }) {\r\n  return (\r\n    <div className=\"menu-item side-menu-heading\">\r\n      <p>{children}</p>\r\n      {icon && icon}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuItem({ children, icon, categoryValue }) {\r\n\r\n  const { dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const handleCategoryClick = async (category) => {\r\n    console.log(category);\r\n    dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n    // try {\r\n    //   const { data } = await API.graphql({ query: postsByCategory, variables: { category }, authMode: 'AWS_IAM' });\r\n    //   setFeedData(data.postsByCategory);\r\n    //   dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n    // } catch (error) {\r\n    //   console.log('error on postByCategory', error);\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => handleCategoryClick(categoryValue)} className=\"menu-item hover\">\r\n      <div className=\"menu-item-left\">\r\n        {icon && icon}\r\n        <p>{children}</p>\r\n      </div>\r\n      <i className=\"fas fa-chevron-right\"></i>\r\n    </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js",["147","148"],"import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport swal from 'sweetalert';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [slides, setSlide] = useState([{ url: '' }]);\r\n  const [thumbnail, setThumbnail] = useState({ url: '' });\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // validating selected files\r\n  const validateImage = (e) => {\r\n    // const filesArray = e.target.files;\r\n    const file = e.target.files[0];\r\n    const size = e.target.files[0].size;\r\n    const type = e.target.files[0].type;\r\n    const name = e.target.files[0].name;\r\n    // const extension = e.target.files[filesArray.length-1];\r\n\r\n    console.log(e.target.files);\r\n\r\n    // !e.target.files[0] ||\r\n    // !e.target.files[0].size ||\r\n    // !e.target.files[0].name.split(\".\")[1] ||\r\n    // !e.target.files[0].name.split(\".\")[0]\r\n\r\n    if (!file || !size || !type || !name) {\r\n\r\n      swal({\r\n        title: \"Error\",\r\n        text: \"File is not supported\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2500\r\n      });\r\n\r\n      return { error: 'error' }\r\n    } else {\r\n\r\n      // console.table(type);\r\n      /* check the file type */\r\n      if (type !== 'image/png' && type !== 'image/jpeg' && type !== 'image/jpg') {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Only .JPG and .PNG File Formats Allowed\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n        return { error: 'error' };\r\n      }\r\n\r\n      if (size > 1000000) {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Too Large. Image Should Be Less Than 1MB\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n  \r\n        return { error: 'error' }\r\n      }\r\n      \r\n      return { file , error: null };\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  const uploadImage = async (base64EncodedImage) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ data: base64EncodedImage }),\r\n          headers: {'Content-type': 'application/json'}\r\n        });\r\n        const data = await response.json();\r\n        resolve(data);\r\n      } catch(error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  // handle slide change\r\n  const handleSlide = (e, index) => {\r\n    e.preventDefault();\r\n    \r\n    const { file, error } = validateImage(e);\r\n    \r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // console.log('image - ', reader.result);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          const list = [...slides];\r\n          list[index]['url'] = reader.result;\r\n          setSlide(list);\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle thumbnail change\r\n  const handleThumbnail = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { file, error } = validateImage(e);\r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          // console.log(reader.result);\r\n          setThumbnail({ url: reader.result });\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle field array\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(thumbnail, slides));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  // handle field array\r\n  const handleRemoveClick = async (index, url) => {\r\n\r\n    // remove image item\r\n\r\n    // remove item from array\r\n    const list = [...slides];\r\n    list.splice(index, 1);\r\n    setSlide(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setSlide([...slides, { url: '' }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    imageLoading,\r\n    handleSlide,\r\n    handleThumbnail,\r\n    handleSubmit,\r\n    handleRemoveClick,\r\n    handleAddClick,\r\n    thumbnail,\r\n    slides,\r\n    setSlide,\r\n    setThumbnail,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/LoginModal.js",["149"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport style from './LoginModal.module.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { Formik, useField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport swal from 'sweetalert';\r\n\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\nimport { ACTIONS } from '../actions';\r\nimport { registerRequest, signInRequest } from '../api/api';\r\n\r\nexport default function LoginModal() {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { state, dispatch } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const handleLogin = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await signInRequest(values);\r\n            if (data) {\r\n                console.log(data);\r\n                dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data });\r\n                localStorage.setItem('accessToken', data.accessToken);\r\n                console.log('sign in success');\r\n                setLoading(false);\r\n                // redirect\r\n                history.push('/account');\r\n            }\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSignUp = async (values) => {\r\n        // console.log('sign up', values);\r\n        setLoading(true);\r\n        try {\r\n            const data = await registerRequest(values);\r\n            if (data) {\r\n                console.log(data);\r\n                dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data });\r\n                localStorage.setItem('accessToken', data.accessToken);\r\n                console.log('sign up success');\r\n                setLoading(false);\r\n            }\r\n            // redirect\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if user logged in redirecting to the account\r\n        state.isAuthenticated && state.user && history.push('/account');\r\n\r\n        // console.log(state);\r\n        document.body.style.overflow = \"hidden\";\r\n        return () => {\r\n            document.body.style.overflow = \"visible\";\r\n        }\r\n    }, []);\r\n\r\n    const [componentState, setComponentState] = useState('signin');\r\n\r\n    const handleClose = (e, includeClass) => {\r\n        typeof e.target.className === \"string\" && \r\n        e.target.className !== \"\" && \r\n        e.target.className.split(' ').includes(includeClass) && history.push('/ads');\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={(e) => handleClose(e, 'wrapper')} className={`${style.modalWrapper} wrapper`}>\r\n            <div className={style.modalBody}>\r\n                {componentState === 'signin' \r\n                ? <SignIn \r\n                    loading={loading} \r\n                    handleLogin={handleLogin} \r\n                    setComponentState={setComponentState} \r\n                />\r\n                : <SignUp\r\n                    loading={loading}\r\n                    handleSignUp={handleSignUp} \r\n                    setComponentState={setComponentState} />\r\n                }\r\n            </div>\r\n        </div>,\r\n        document.getElementById('sideMenuPortal')\r\n    );\r\n}\r\n\r\nconst SignIn = ({ setComponentState, handleLogin, loading }) => {\r\n\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        : \r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Sign In to</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleLogin(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                </Formik>\r\n                <button onClick={() => setComponentState('signup')}>Create Account</button>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst SignUp = ({ setComponentState, loading, handleSignUp }) => {\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        :\r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Create Account</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleSignUp(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                </Formik>\r\n                <button onClick={() => setComponentState('signin')}>Sign in</button>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst TextField = ({id, label, ...props}) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...field} {...props} className={`form-control ${meta.touched && meta.error ? `is-invalid` : null}`} />\r\n            {meta.touched && meta.error ? (\r\n                <div id={id} className=\"invalid-feedback\">\r\n                    {meta.error}\r\n                </div>\r\n            ): null}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js",["150"],"import { useEffect } from 'react';\r\n\r\nconst textFilter = (email, num) => {\r\n    if (email.length > num) {\r\n\r\n      // removing 17 characters from end\r\n      let newEmail = email.split(\"\");\r\n      let remove = newEmail.length - num;\r\n      newEmail.splice(-remove);\r\n\r\n      return newEmail;\r\n    } else {\r\n      return email;\r\n    }\r\n}\r\n\r\nconst copyToClipboard = (value) => {\r\n  let tempInput = document.createElement(\"input\");\r\n  tempInput.value = value;\r\n  document.body.appendChild(tempInput);\r\n  tempInput.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(tempInput);\r\n};\r\n\r\nexport {\r\n  textFilter, \r\n  copyToClipboard\r\n};","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js",["151","152","153"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js",["154"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js",["155","156","157","158","159"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js",["160","161","162","163","164"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js",["165","166","167","168"],"import React from 'react';\r\nimport { Form, Formik, FieldArray, useField } from 'formik';\r\nimport {Link} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n// import { updateBranch, deleteBranch, createBranch, updatePost } from '../../../graphql/mutations';\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\nimport swal from 'sweetalert';\r\n\r\nimport style from './edit.module.scss';\r\n\r\n// import Options from '../FormOptions/Options';\r\n\r\nconst Overview = ({ initialData, currentPost }) => {\r\n\r\n    const { post } = initialData;\r\n    const removeBranch = async (item) => {\r\n      // console.log('removed', item.id);\r\n      // const deletedBranch = await API.graphql(graphqlOperation(deleteBranch, {input : { id: item.id }}));\r\n      // console.log(deletedBranch);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        {post &&\r\n        <Formik\r\n          initialValues={{\r\n            category: post.category,\r\n            brandName: post.brandName,\r\n            number: post.number,\r\n            website: post.website,\r\n            facebook: post.facebook,\r\n            instagram: post.instagram,\r\n            twitter: post.twitter,\r\n            branches: post.branches.map((branch) => {\r\n              return {\r\n                id: branch._id,\r\n                branchLocation: branch.branchLocation,\r\n                district: branch.district\r\n              }\r\n            }),\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            category: Yup.string().required(),\r\n            brandName: Yup.string().min(2).max(25).required('Required'),\r\n            number: Yup.string().min(2).max(12).required('Required'),\r\n            website: Yup.string()\r\n              .max(30)\r\n              .url('must be like https://www.site.com'),\r\n            facebook: Yup.string().max(50).url(),\r\n            instagram: Yup.string().max(50).url(),\r\n            twitter: Yup.string().max(50).url(),\r\n            branches: Yup.array()\r\n              .of(\r\n                Yup.object().shape({\r\n                  branchLocation: Yup.string()\r\n                    .max(60)\r\n                    .url('invalid url')\r\n                    .required('required'),\r\n                  district: Yup.string().required('required'),\r\n                })\r\n              )\r\n              .required('required :)')\r\n              .max(5, 'Maximum 5 branches'),\r\n\r\n              // bookingOption: Yup.string().max(100).url(),\r\n              // airbnbOption: Yup.string().max(100).url(),\r\n              // trivagoOption: Yup.string().max(100).url(),\r\n          })}\r\n          onSubmit={(values) => {\r\n\r\n            console.log(values);\r\n\r\n            // console.log('submitted values', values);\r\n\r\n            // const { \r\n            //   category, \r\n            //   brandName, \r\n            //   number,\r\n            //   website, \r\n            //   facebook, \r\n            //   instagram, \r\n            //   twitter,\r\n            // } = values;\r\n\r\n              // collect options if available\r\n              // let availableOptions = [];\r\n              // airbnbOption && availableOptions.push({ option: \"airbnb\", url: airbnbOption });\r\n              // bookingOption && availableOptions.push({ option: \"booking\", url: bookingOption });\r\n              // trivagoOption && availableOptions.push({ option: \"trivago\", url: trivagoOption });\r\n              // halalOption && availableOptions.push({ option: \"halal\", url: halalOption });\r\n\r\n            // // structure the posts properly\r\n            // const post = {\r\n            //   id: currentPost,\r\n            //   brand_name: brandName,\r\n            //   category: category,\r\n            //   number: number,\r\n            //   website: website,\r\n            //   facebook: facebook,\r\n            //   instagram: instagram,\r\n            //   twitter: twitter\r\n            // };\r\n\r\n            const handleUpdateBranch = async (update) => {\r\n              // try {\r\n              //   const updatedBranch = await API.graphql(graphqlOperation(updateBranch, { input: update }));\r\n              //   console.log('branch updated', updatedBranch);\r\n              // } catch (error) {\r\n              //   console.log('update branch error', error);\r\n              // }\r\n            }\r\n\r\n            const handleCreateBranch = async (create) => {\r\n              // try {\r\n              //   const createdBranch = await API.graphql(graphqlOperation(createBranch, { input: create }));\r\n              //   console.log('branch created', createdBranch);\r\n              // } catch (error) {\r\n              //   console.log('create branch error', error);\r\n\r\n              // }\r\n            }\r\n\r\n            const handleUpdatePost = async () => {\r\n              // try {\r\n              //   const updatedPost = await API.graphql(graphqlOperation(updatePost, { input: post } ));\r\n              //   console.log('updated post', updatedPost);\r\n              //   swal({\r\n              //     title: \"Updated\",\r\n              //     text: \"Overview is updated\",\r\n              //     buttons: false,\r\n              //     timer: 2500\r\n              //   });\r\n              // } catch (error) {\r\n              //   console.log('error updating post', error);\r\n              // }\r\n            }\r\n\r\n            // updating branches \r\n            // for (const item of values.branches) {\r\n            //   if (item.id) {\r\n            //     const update = {\r\n            //       id: item.id,\r\n            //       postID: currentPost,\r\n            //       location: item.branchLocation,\r\n            //       district: item.district\r\n            //     }\r\n            //     handleUpdateBranch(update);\r\n            //   } else {\r\n            //     const create = {\r\n            //       postID: currentPost,\r\n            //       location: item.branchLocation,\r\n            //       district: item.district\r\n            //     }\r\n            //     handleCreateBranch(create);\r\n            //   }\r\n            //   // add the id of the branch that i want to edit\r\n            // }\r\n\r\n            // updating post\r\n            // handleUpdatePost();\r\n            \r\n          }}\r\n        >\r\n          {({ values, errors }) => (\r\n            <Form>\r\n              <div className={style.overview}>\r\n                <div className={style.groupWrapper}>\r\n                  <h1>Ad Information</h1>\r\n                  <div className={style.formGroup}>\r\n                    <CategoryField\r\n                      label=\"Category\"\r\n                      type=\"text\"\r\n                      name=\"category\"\r\n                    />\r\n                    <TextField\r\n                      id=\"brandName\"\r\n                      name=\"brandName\"\r\n                      type=\"text\"\r\n                      label=\"Brand Name\"\r\n                    />\r\n                    <TextField\r\n                      id=\"number\"\r\n                      name=\"number\"\r\n                      type=\"number\"\r\n                      label=\"Phone Number\"\r\n                    />\r\n                    <TextField\r\n                      id=\"website\"\r\n                      name=\"website\"\r\n                      type=\"text\"\r\n                      label=\"Website\"\r\n                      placeholder=\"https://www.website.com\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className={style.groupWrapper}>\r\n                  <h1>Connect social media</h1>\r\n                  <div className={style.formGroup}>\r\n                    <TextField\r\n                      id=\"facebook\"\r\n                      name=\"facebook\"\r\n                      type=\"text\"\r\n                      label=\"Facebook\"\r\n                      placeholder=\"https://www.facebook.com/account\"\r\n                    />\r\n                    <TextField\r\n                      id=\"instagram\"\r\n                      name=\"instagram\"\r\n                      type=\"text\"\r\n                      label=\"Instagram\"\r\n                      placeholder=\"https://www.instagram.com/account\"\r\n                    />\r\n                    <TextField\r\n                      id=\"twitter\"\r\n                      name=\"twitter\"\r\n                      type=\"text\"\r\n                      label=\"Twitter\"\r\n                      placeholder=\"https://www.twitter.com/account\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <Options values={values} /> */}\r\n    \r\n                <div className={style.branchGroupWrapper}>\r\n                  <h1>Branches</h1>\r\n                  <p>You should at least have one branch. you can add up to 3</p>\r\n                  <FieldArray\r\n                    name=\"branches\"\r\n                    render={({ remove, push }) => (\r\n                      <div>\r\n                        {values.branches && values.branches.length > 0\r\n                          ? values.branches.map((friend, index) => (\r\n                              <div key={index} className={style.branchInput}>\r\n                                <TextField\r\n                                  label=\"Location\"\r\n                                  type=\"text\"\r\n                                  name={`branches.${index}.branchLocation`}\r\n                                />\r\n                                <DistrictField\r\n                                  label=\"District\"\r\n                                  type=\"text\"\r\n                                  name={`branches.${index}.district`}\r\n                                />\r\n                                {values.branches.length !== 1 && (\r\n                                  <div className={style.addButton}>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => {\r\n                                        removeBranch(friend)\r\n                                        remove(index)\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"fas fa-minus\"></i>\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))\r\n                          : null}\r\n                        {values.branches.length !== 5 && (\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() =>\r\n                              push({\r\n                                branchLocation: '',\r\n                                district: '',\r\n                              })\r\n                            }\r\n                          >\r\n                            ADD\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className={style.formFooterButtons}>\r\n                  <button type=\"submit\">Update Overview</button>\r\n                  <Link to=\"/account\"><button>Cancel</button></Link>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\n// const Options = () => {\r\n// }\r\n\r\nconst TextField = ({ label, id, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n  \r\n    return (\r\n      <div>\r\n        <label>{label}</label>\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          className={`form-control ${\r\n            meta.touched && meta.error ? `is-invalid` : null\r\n          }`}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <div id={id} className=\"invalid-feedback\">\r\n            {meta.error}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n};\r\n\r\nconst DistrictField = ({ label, ...props }) => {\r\n    const [field] = useField(props);\r\n  \r\n    return (\r\n      <>\r\n        <div>\r\n          <label>{label}</label>\r\n          <select {...field} {...props} className=\"form-control\">\r\n            <option>Select Field</option>\r\n            <option value=\"ampara\">Ampara</option>\r\n            <option value=\"anuradhapura\">Anuradhapura</option>\r\n            <option value=\"badulla\">Badulla</option>\r\n            <option value=\"batticaloa\">Batticaloa</option>\r\n            <option value=\"colombo\">Colombo</option>\r\n            <option value=\"galle\">Galle</option>\r\n            <option value=\"gampaha\">Gampaha</option>\r\n            <option value=\"hambantota\">Hambantota</option>\r\n            <option value=\"jaffna\">Jaffna</option>\r\n            <option value=\"kalutara\">Kalutara</option>\r\n            <option value=\"kandy\">Kandy</option>\r\n            <option value=\"kegalle\">Kegalle</option>\r\n            <option value=\"kilinochchi\">Kilinochchi</option>\r\n            <option value=\"kurunegala\">Kurunegala</option>\r\n            <option value=\"mannar\">Mannar</option>\r\n            <option value=\"matale\">Matale</option>\r\n            <option value=\"matara\">Matara</option>\r\n            <option value=\"monaragala\">Monaragala</option>\r\n            <option value=\"mullativu\">Mullativu</option>\r\n            <option value=\"nuwaraEliya\">Nuwara Eliya</option>\r\n            <option value=\"polonnaruwa\">Polonnaruwa</option>\r\n            <option value=\"puttalam\">Puttalam</option>\r\n            <option value=\"ratnapura\">Ratnapura</option>\r\n            <option value=\"trincomalee\">Trincomalee</option>\r\n            <option value=\"vavuniya\">Vavuniya</option>\r\n          </select>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nconst CategoryField = ({ label, ...props }) => {\r\n    const [field] = useField(props);\r\n\r\n    return (\r\n        <div>\r\n        <label>{label}</label>\r\n        <select {...field} {...props} className=\"form-control\">\r\n            <option value=\"fashion\">Fashion</option>\r\n            <option value=\"restaurantsCafes\">Restaurants & Cafes</option>\r\n            <option value=\"spasSaloons\">Spas & Saloons</option>\r\n            <option value=\"fitness\">Fitness</option>\r\n            <option value=\"homemade\">Homemade</option>\r\n            <option value=\"services\">Services</option>\r\n            <option value=\"taxi\">Taxi</option>\r\n            <option value=\"entertainment\">Entertainment</option>\r\n            <option value=\"onlineStores\">Online stores</option>\r\n            <option value=\"finance\">Finance</option>\r\n            <option value=\"hospitals\">Hospitals</option>\r\n            <option value=\"essentials\">Essentials</option>\r\n            <option value=\"tours\">Tours</option>\r\n            <option value=\"hotels\">Hotels</option>\r\n            <option value=\"shoppingCentres\">Shopping Centres</option>\r\n            <option value=\"wineStores\">Wine Stores</option>\r\n            <option value=\"properties\">Properties</option>\r\n            <option value=\"furniture\">Furniture</option>\r\n            <option value=\"events\">Events</option>\r\n            <option value=\"florists\">Florists</option>\r\n            <option value=\"freelancers\">Freelancers</option>\r\n            <option value=\"electronics\">Electronics</option>\r\n            <option value=\"advertising\">Advertising</option>\r\n            <option value=\"toysFun\">Toys & Fun</option>\r\n            <option value=\"vehicles\">Vehicles</option>\r\n            <option value=\"hardware\">Hardware</option>\r\n            <option value=\"sports\">Sports</option>\r\n          </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":36,"column":21,"nodeType":"175","messageId":"176","endLine":36,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":71,"column":6,"nodeType":"179","endLine":71,"endColumn":8,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"182","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"183","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":45},{"ruleId":"173","severity":1,"message":"184","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":14},{"ruleId":"173","severity":1,"message":"185","line":12,"column":10,"nodeType":"175","messageId":"176","endLine":12,"endColumn":21},{"ruleId":"173","severity":1,"message":"186","line":24,"column":21,"nodeType":"175","messageId":"176","endLine":24,"endColumn":32},{"ruleId":"173","severity":1,"message":"187","line":70,"column":7,"nodeType":"175","messageId":"176","endLine":70,"endColumn":14},{"ruleId":"169","replacedBy":"188"},{"ruleId":"171","replacedBy":"189"},{"ruleId":"169","replacedBy":"190"},{"ruleId":"171","replacedBy":"191"},{"ruleId":"173","severity":1,"message":"182","line":1,"column":44,"nodeType":"175","messageId":"176","endLine":1,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":21,"column":11,"nodeType":"175","messageId":"176","endLine":21,"endColumn":16},{"ruleId":"173","severity":1,"message":"186","line":23,"column":11,"nodeType":"175","messageId":"176","endLine":23,"endColumn":22},{"ruleId":"173","severity":1,"message":"192","line":25,"column":23,"nodeType":"175","messageId":"176","endLine":25,"endColumn":37},{"ruleId":"173","severity":1,"message":"193","line":27,"column":10,"nodeType":"175","messageId":"176","endLine":27,"endColumn":17},{"ruleId":"173","severity":1,"message":"194","line":27,"column":19,"nodeType":"175","messageId":"176","endLine":27,"endColumn":29},{"ruleId":"173","severity":1,"message":"195","line":52,"column":9,"nodeType":"175","messageId":"176","endLine":52,"endColumn":27},{"ruleId":"196","severity":1,"message":"197","line":130,"column":14,"nodeType":"198","endLine":130,"endColumn":29},{"ruleId":"173","severity":1,"message":"199","line":210,"column":7,"nodeType":"175","messageId":"176","endLine":210,"endColumn":14},{"ruleId":"173","severity":1,"message":"186","line":96,"column":11,"nodeType":"175","messageId":"176","endLine":96,"endColumn":22},{"ruleId":"173","severity":1,"message":"200","line":2,"column":16,"nodeType":"175","messageId":"176","endLine":2,"endColumn":22},{"ruleId":"177","severity":1,"message":"201","line":173,"column":6,"nodeType":"179","endLine":173,"endColumn":14,"suggestions":"202"},{"ruleId":"177","severity":1,"message":"203","line":86,"column":8,"nodeType":"179","endLine":86,"endColumn":10,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"181","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":19},{"ruleId":"173","severity":1,"message":"181","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"205","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":12},{"ruleId":"173","severity":1,"message":"187","line":24,"column":9,"nodeType":"175","messageId":"176","endLine":24,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":102,"column":27,"nodeType":"208","endLine":102,"endColumn":74},{"ruleId":"173","severity":1,"message":"184","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":14},{"ruleId":"173","severity":1,"message":"209","line":12,"column":10,"nodeType":"175","messageId":"176","endLine":12,"endColumn":20},{"ruleId":"173","severity":1,"message":"210","line":35,"column":9,"nodeType":"175","messageId":"176","endLine":35,"endColumn":16},{"ruleId":"177","severity":1,"message":"211","line":37,"column":8,"nodeType":"179","endLine":37,"endColumn":10,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":69,"column":9,"nodeType":"215","messageId":"216","endLine":74,"endColumn":10},{"ruleId":"173","severity":1,"message":"182","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"217","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":49},{"ruleId":"177","severity":1,"message":"218","line":90,"column":8,"nodeType":"179","endLine":90,"endColumn":29,"suggestions":"219"},{"ruleId":"206","severity":1,"message":"207","line":135,"column":33,"nodeType":"208","endLine":135,"endColumn":62},{"ruleId":"206","severity":1,"message":"207","line":152,"column":23,"nodeType":"208","endLine":152,"endColumn":55},{"ruleId":"173","severity":1,"message":"205","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":12},{"ruleId":"173","severity":1,"message":"220","line":106,"column":19,"nodeType":"175","messageId":"176","endLine":106,"endColumn":37},{"ruleId":"173","severity":1,"message":"221","line":115,"column":19,"nodeType":"175","messageId":"176","endLine":115,"endColumn":37},{"ruleId":"173","severity":1,"message":"222","line":125,"column":19,"nodeType":"175","messageId":"176","endLine":125,"endColumn":35},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Link' is defined but never used.","'AuthContext' is defined but never used.","'setFeedData' is assigned a value but never used.","'history' is assigned a value but never used.",["223"],["224"],["223"],["224"],"'setSuggestions' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'handleSearchButton' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Spinner' is assigned a value but never used.","'uuidv4' is defined but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"React Hook useEffect has missing dependencies: 'history', 'state.isAuthenticated', and 'state.user'. Either include them or remove the dependency array.",["227"],"'swal' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'updatePost' is defined but never used.","'mounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["228"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'handleInitialState' and 'slide'. Either include them or remove the dependency array.",["229"],"'handleUpdateBranch' is assigned a value but never used.","'handleCreateBranch' is assigned a value but never used.","'handleUpdatePost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [loadUser]",{"range":"240","text":"241"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"242","text":"243"},"Update the dependencies array to be: [history, state.isAuthenticated, state.user]",{"range":"244","text":"245"},"Update the dependencies array to be: [id]",{"range":"246","text":"247"},"Update the dependencies array to be: [MemSlide, handleInitialState, slide, thumbnail]",{"range":"248","text":"249"},[1994,1996],"[loadUser]",[4481,4489],"[callback, errors, isSubmitting]",[2833,2835],"[history, state.isAuthenticated, state.user]",[1044,1046],"[id]",[2379,2400],"[MemSlide, handleInitialState, slide, thumbnail]"]