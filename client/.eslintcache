[{"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js":"1","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js":"2","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js":"3","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js":"4","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/SignUp.js":"5","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Form.js":"6","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js":"7","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js":"8","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js":"9","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js":"10","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js":"11","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js":"12","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js":"13","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js":"14","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/LoginModal.js":"15","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js":"16","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js":"17","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js":"18","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js":"19","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js":"20","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js":"21","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js":"22","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js":"23","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js":"24","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js":"25","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js":"26","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js":"27"},{"size":875,"mtime":1607466488243,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1606936230290,"results":"30","hashOfConfig":"29"},{"size":3080,"mtime":1609513682073,"results":"31","hashOfConfig":"29"},{"size":3161,"mtime":1609712921379,"results":"32","hashOfConfig":"29"},{"size":2130,"mtime":1607457307056,"results":"33","hashOfConfig":"29"},{"size":456,"mtime":1607463283287,"results":"34","hashOfConfig":"29"},{"size":1764,"mtime":1608285641751,"results":"35","hashOfConfig":"29"},{"size":394,"mtime":1607464293348,"results":"36","hashOfConfig":"29"},{"size":3295,"mtime":1609713131646,"results":"37","hashOfConfig":"29"},{"size":789,"mtime":1607467198927,"results":"38","hashOfConfig":"29"},{"size":262,"mtime":1608269950988,"results":"39","hashOfConfig":"29"},{"size":5536,"mtime":1607468941418,"results":"40","hashOfConfig":"29"},{"size":994,"mtime":1607508004683,"results":"41","hashOfConfig":"29"},{"size":4743,"mtime":1609252771660,"results":"42","hashOfConfig":"29"},{"size":7613,"mtime":1609312779913,"results":"43","hashOfConfig":"29"},{"size":3602,"mtime":1609709827202,"results":"44","hashOfConfig":"29"},{"size":648,"mtime":1607565675314,"results":"45","hashOfConfig":"29"},{"size":4720,"mtime":1609712323204,"results":"46","hashOfConfig":"29"},{"size":3629,"mtime":1609697936066,"results":"47","hashOfConfig":"29"},{"size":7136,"mtime":1608466932536,"results":"48","hashOfConfig":"29"},{"size":8699,"mtime":1608922565908,"results":"49","hashOfConfig":"29"},{"size":4209,"mtime":1609596138303,"results":"50","hashOfConfig":"29"},{"size":566,"mtime":1609185755293,"results":"51","hashOfConfig":"29"},{"size":2523,"mtime":1609680564914,"results":"52","hashOfConfig":"29"},{"size":4652,"mtime":1609681836700,"results":"53","hashOfConfig":"29"},{"size":12663,"mtime":1609703644318,"results":"54","hashOfConfig":"29"},{"size":371,"mtime":1607508004680,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1v6w62h",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/index.js",[],["127","128"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/reportWebVitals.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/App.js",["129","130"],"import React, { useEffect, useContext } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Feed from './Components/Feed';\n// import Login from './Components/Auth/Login';\n// import SignUp from './Components/Auth/SignUp';\n// import Form from './Components/Form';\n// import ThirdStep from './Components/Auth/ThirdStep';\nimport Account from './Components/Auth/Account';\nimport Edit from './Components/Auth/EditPost/Edit';\n\n// import { getUser } from './api/api';\n\n/*\nimport SignUp from './Components/Auth/SignUp';\nimport Account from './Components/Auth/Account';\nimport VerifyAccount from './Components/VerifyAccount';\nimport Location from './Components/LocationModal';\nimport Edit from './Components/Auth/EditPost/Edit';\nimport Modal from './Components/Modal';\n\nimport NotFound from './Components/NotFound';\n\nimport FeedContextProvider from './Context/FeedContext';\n\n*/\nimport CreatePost from './Components/Auth/CreatePost/CreatePost';\n\n\nimport { AuthContext } from './Context/AuthContext';\nimport { ACTIONS } from './actions';\nimport { verifyToken } from './api/api';\n\nexport default function App() {\n\n  const { dispatch, state } = useContext(AuthContext);\n\n  // const fetchUser = async () => {\n  //   setUserLoading(true);\n  //   if (data.error) {\n  //     setAuthStatus(false);\n  //     setUser(null);\n  //     setUserLoading(false);\n  //   } else {\n  //     setAuthStatus(true);\n  //     setUser(data);\n  //     setUserLoading(false);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   fetchUser();\n  // }, [])\n\n  const loadUser = async () => {\n    try {\n      dispatch({ type: ACTIONS.USER_LOADING });\n      const data = await verifyToken();\n      if (data) {\n        dispatch({ type: ACTIONS.USER_LOADED, payload: data });\n      }\n      console.log('user load success', data);\n    } catch(error) {\n      if (error) dispatch({ type: ACTIONS.AUTH_ERROR });\n      console.log('no auth user', error);\n    }\n  }\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  // most specific routes first then least specific routes\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <><Redirect to=\"/ads\" /></>} />\n          <Route path=\"/ads\" component={Feed} />\n          {/* <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} /> */}\n          {/* <Route path=\"/form\" component={ThirdStep} /> */}\n          {/* <Route path=\"/form\" component={Form} /> */}\n          <Route path=\"/account/:id/edit\" component={Edit} />\n          <Route path=\"/account\" component={Account} />\n          <Route path=\"/create\" component={CreatePost} />\n          {/* <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n\n\n          <Route path=\"/create\">\n            <CreatePost />\n          </Route>\n          <Route path=\"/confirm\" component={VerifyAccount} />\n          <Route path=\"*\">\n            <NotFound />\n          </Route> */}\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Feed.js",["131","132","133","134"],"import React, { useEffect, useState, useMemo, useContext } from 'react';\r\nimport SideMenu from './SideMenu';\r\nimport Navbar from './Navbar';\r\n// import Modal from './Modal';\r\nimport LoginModal from './LoginModal';\r\n// import LocationModal from './LocationModal';\r\n\r\nimport './Feed.scss';\r\n\r\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { getAllPosts } from '../api/api';\r\n\r\nexport default function Feed() {\r\n\r\n  const { feedData, setFeedData } = useContext(FeedContext);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { posts } = await getAllPosts();\r\n      setFeedData(posts)\r\n    } catch(error) {\r\n      console.log('error listing posts', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  });\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const { data } = await promise;\r\n//         setFeedData(data.listPosts);\r\n//       } catch (error) {\r\n//         console.log('error on listing posts', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//       API.cancel(promise, \"my message for cancellation\");\r\n//     }\r\n//   }, []);\r\n\r\n  /*\r\n  const updateAnalytics = async (currentId) => {\r\n    try {\r\n      // fetch post by id\r\n      const { data } = await API.graphql({ query: getPost, variables: { id: currentId }, authMode: 'AWS_IAM' });\r\n      // add click to analytics\r\n      const updateAnalytics = {\r\n        id: data.getPost.id,\r\n        analytics: parseInt(data.getPost.analytics) + 1\r\n      }\r\n      // update clicks\r\n      await API.graphql({ \r\n        query: updatePost, \r\n        variables: { input: updateAnalytics }, \r\n        authMode: 'AWS_IAM' \r\n      });\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleAdClick = (id) => {\r\n    updateAnalytics(id);\r\n    history.push(`/ads/${id}`);\r\n  }\r\n  */\r\n\r\n  // fill 400 grid boxes with empty grey boxes\r\n  let gridItems = [];\r\n  const countingGrid = () => {\r\n    if (feedData.items && feedData.items.length < 50) {\r\n      let boxes = 400 - feedData.items.length;\r\n      for (let i = 0; i <= boxes; i++) {\r\n        gridItems.push(i);\r\n      }\r\n    } else {\r\n        for (let i = 0; i <= 400; i++) {\r\n            gridItems.push(i);\r\n        }\r\n    }\r\n  }\r\n\r\n  countingGrid();\r\n  \r\n  return (\r\n      <div>\r\n          <Navbar />\r\n          <SideMenu />\r\n        {/* \r\n         */}\r\n          <div className=\"feed\">\r\n            <div className=\"image-list\">\r\n            {\r\n              feedData ? \r\n                feedData.map((item, index) => (\r\n                  <img key={index} src={item.thumbnail} alt=\"feedbox\"/>\r\n                ))\r\n              :\r\n                null\r\n            }\r\n          {gridItems.map((box, index) => <div key={index} className=\"grid\"></div>)}\r\n            </div>\r\n          </div>\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/ads/location\" component={LocationModal} /> */}\r\n          <Route path=\"/ads/sign-in\" component={LoginModal}/>\r\n          {/* <Route path=\"/ads/:id\" component={Modal} /> */}\r\n        </Switch> \r\n      </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/SignUp.js",[],["135","136"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Form.js",[],["137","138"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/AuthContext.js",["139"],"import React, { createContext, useReducer ,useState } from 'react';\r\nimport { ACTIONS } from '../actions';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case ACTIONS.USER_LOADING:\r\n          return state = {\r\n              ...state,\r\n              isLoading: true\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.USER_LOADED:\r\n          return state = {\r\n              ...state,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              user: action.payload\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.AUTH_SUCCESS:\r\n          // setLocalStorage(action.payload)\r\n          return state = {\r\n              ...state,\r\n              ...action.payload,\r\n              isAuthenticated: true,\r\n              isLoading: false,\r\n              user: action.payload\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      case ACTIONS.AUTH_ERROR:\r\n          localStorage.removeItem('token');\r\n          return state = {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              isAuthenticated: false,\r\n              isLoading: false\r\n          }\r\n      // eslint-disable-next-line no-fallthrough\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n      token: localStorage.getItem('token'),\r\n      isAuthenticated: null,\r\n      isLoading: false,\r\n      user: null\r\n  });\r\n\r\n  return (\r\n      <AuthContext.Provider value={{ state, dispatch }}>\r\n          {children}\r\n      </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/FeedContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Navbar.js",["140","141","142","143","144","145"],"import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.scss';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Toggle } from '../assets/toggle.svg';\r\nimport { ReactComponent as SearchBar } from '../assets/search.svg';\r\nimport { ReactComponent as Facebook } from '../assets/facebook.svg';\r\nimport { ReactComponent as Instagram } from '../assets/instagram.svg';\r\nimport { ReactComponent as Location } from '../assets/location.svg';\r\n\r\n// import { API, graphqlOperation } from 'aws-amplify';\r\n// import { listPosts, searchPosts } from '../graphql/queries';\r\n\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nimport { ACTIONS } from '../actions';\r\nexport default function Navbar({ auth }) {\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const [suggestions, setSuggestions] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const inputStatus = useRef(false);\r\n\r\n  // clear input search field\r\n  const inputRef = useRef(null);\r\n\r\n  const clearInput = () => {\r\n    inputRef.current.value = \"\";\r\n  }\r\n\r\n  // mobile search bar\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // open\r\n  const useMobileOutsideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setToggle(false);\r\n          // setToggle(false);\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const mobileRef = useRef(null);\r\n  useMobileOutsideHandler(mobileRef);\r\n  // end\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"nav-left\">\r\n          <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n          <img src={logo} alt=\"logo\" />\r\n          <div className=\"search-bar\">\r\n            <input ref={inputRef} type=\"search\" placeholder=\"Search\" />\r\n            {inputStatus.current ? <i onClick={() => clearInput()} className=\"fas fa-times\"></i> : <i className=\"fas fa-search\"></i>}\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-center\">\r\n          <Link to=\"/ads/location\"><Location /></Link>\r\n        </div>\r\n\r\n        <div className=\"nav-right\">\r\n          <Facebook onClick={() => console.log(suggestions.items)} />\r\n          <a target=\"_blank\" href=\"https://www.instagram.com/hotbox.srilanka\"><Instagram /></a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobile-top-nav\">\r\n        <Toggle onClick={() => dispatch({ type: ACTIONS.SIDE_MENU })} />\r\n        <SearchBar onClick={() => setToggle(!toggle)}  />\r\n        <img src={logo} alt=\"logo\" />\r\n        <Facebook />\r\n        <Instagram />\r\n      </div>\r\n\r\n      <div ref={mobileRef} className={`mobile-search-bar ${toggle ? `show` : `hide`} `}>\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </div>\r\n\r\n      <div className=\"mobile-bottom-nav\">\r\n        <Link to=\"/ads/location\"><Location /></Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Context/PortalContext.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/actions.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/SideMenu.js",["146"],"import React, { useContext, useRef, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './SideMenu.scss';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\nimport { ACTIONS } from '../actions';\r\n\r\n// import { API } from 'aws-amplify';\r\n// import { postsByCategory } from '../graphql/queries';\r\n\r\n// consume context\r\nimport { PortalContext } from '../Context/PortalContext';\r\nimport { FeedContext } from '../Context/FeedContext'; \r\n\r\nexport default function SideMenu() {\r\n\r\n  const { state, dispatch } = useContext(PortalContext);\r\n\r\n  const useOutSideHandler = (ref) => {\r\n    useEffect(() => {\r\n\r\n      const handleOutsideClick = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n        }\r\n      }\r\n  \r\n      document.addEventListener(\"mousedown\", handleOutsideClick);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n      }\r\n    }, [ref]);\r\n  }\r\n\r\n  const menuRef = useRef(null);\r\n  useOutSideHandler(menuRef);\r\n    \r\n  return ReactDOM.createPortal(\r\n    <div ref={menuRef}\r\n      className={`${\r\n        state.sideMenu ? `side-menu-wrapper show-menu` : `side-menu-wrapper`\r\n      }`}\r\n    >\r\n      <MenuHeading\r\n        icon={<Close onClick={() => dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })} />}\r\n      >\r\n        Hotbox.lk\r\n      </MenuHeading>\r\n      <MenuItem>About us</MenuItem>\r\n      <Link to=\"/ads/sign-in\"><MenuItem>Sign in</MenuItem></Link>\r\n      <MenuHeading>CATEGORIES</MenuHeading>\r\n      <MenuItem categoryValue=\"fashion\" icon={<i className=\"fas fa-tshirt\"></i>}>Fashion</MenuItem>\r\n      <MenuItem categoryValue=\"restaurantsCafes\" icon={<i className=\"fas fa-utensils\"></i>}>Restaurants & Cafes</MenuItem>\r\n      <MenuItem categoryValue=\"spasSaloons\" icon={<i className=\"fas fa-cut\"></i>}>Spas & Saloons</MenuItem>\r\n      <MenuItem categoryValue=\"homemade\" icon={<i className=\"fas fa-hand-paper\"></i>}>Homemade</MenuItem>\r\n      <MenuItem categoryValue=\"services\" icon={<i className=\"fas fa-circle\"></i>}>Services</MenuItem>\r\n      <MenuItem categoryValue=\"taxi\" icon={<i className=\"fas fa-taxi\"></i>}>Taxi</MenuItem>\r\n      <MenuItem categoryValue=\"entertainment\" icon={<i className=\"fas fa-compact-disc\"></i>}>Entertainment</MenuItem>\r\n      <MenuItem categoryValue=\"onlineStores\" icon={<i className=\"fas fa-shopping-cart\"></i>}>Online stores</MenuItem>\r\n      <MenuItem categoryValue=\"finance\" icon={<i className=\"fas fa-hand-holding-usd\"></i>}>Finance</MenuItem>\r\n      <MenuItem categoryValue=\"hospitals\" icon={<i className=\"fas fa-stethoscope\"></i>}>Hospitals</MenuItem>\r\n      <MenuItem categoryValue=\"essentials\" icon={<i className=\"fas fa-circle\"></i>}>Essentials</MenuItem>\r\n      <MenuItem categoryValue=\"tours\" icon={<i className=\"fas fa-plane\"></i>}>Tours</MenuItem>\r\n      <MenuItem categoryValue=\"hotels\" icon={<i className=\"fas fa-hotel\"></i>}>Hotels</MenuItem>\r\n      <MenuItem categoryValue=\"shoppingCentres\" icon={<i className=\"fas fa-store\"></i>}>Shopping Centres</MenuItem>\r\n      <MenuItem categoryValue=\"wineStores\" icon={<i className=\"fas fa-wine-bottle\"></i>}>Wine Stores</MenuItem>\r\n      <MenuItem categoryValue=\"properties\" icon={<i className=\"fas fa-home\"></i>}>Properties</MenuItem>\r\n      <MenuItem categoryValue=\"furniture\" icon={<i className=\"fas fa-couch\"></i>}>Furniture</MenuItem>\r\n      <MenuItem categoryValue=\"events\" icon={<i className=\"far fa-calendar-alt\"></i>}>Events</MenuItem>\r\n      <MenuItem categoryValue=\"florists\" icon={<i className=\"fas fa-circle\"></i>}>Florists</MenuItem>\r\n      <MenuItem categoryValue=\"freelancers\" icon={<i className=\"fas fa-briefcase\"></i>}>Freelancers</MenuItem>\r\n      <MenuItem categoryValue=\"electronics\" icon={<i className=\"fas fa-cog\"></i>}>Electronics</MenuItem>\r\n      <MenuItem categoryValue=\"advertising\" icon={<i className=\"fas fa-ad\"></i>}>Advertising</MenuItem>\r\n      <MenuItem categoryValue=\"toysFun\" icon={<i className=\"fas fa-baby\"></i>}>Toys & Fun</MenuItem>\r\n      <MenuItem categoryValue=\"vehicles\" icon={<i className=\"fas fa-car\"></i>}>Vehicles</MenuItem>\r\n      <MenuItem categoryValue=\"hardware\" icon={<i className=\"fas fa-tools\"></i>}>Hardware</MenuItem>\r\n      <MenuItem categoryValue=\"sports\" icon={<i className=\"fas fa-futbol\"></i>}>Sports</MenuItem>\r\n    </div>,\r\n    document.getElementById('sideMenuPortal')\r\n  );\r\n}\r\n\r\nfunction MenuHeading({ children, icon }) {\r\n  return (\r\n    <div className=\"menu-item side-menu-heading\">\r\n      <p>{children}</p>\r\n      {icon && icon}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuItem({ children, icon, categoryValue }) {\r\n\r\n  const { dispatch } = useContext(PortalContext);\r\n\r\n  const { setFeedData } = useContext(FeedContext);\r\n\r\n  const handleCategoryClick = async (category) => {\r\n    console.log(category);\r\n    dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n    // try {\r\n    //   const { data } = await API.graphql({ query: postsByCategory, variables: { category }, authMode: 'AWS_IAM' });\r\n    //   setFeedData(data.postsByCategory);\r\n    //   dispatch({ type: ACTIONS.CLOSE_SIDE_MENU })\r\n    // } catch (error) {\r\n    //   console.log('error on postByCategory', error);\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => handleCategoryClick(categoryValue)} className=\"menu-item hover\">\r\n      <div className=\"menu-item-left\">\r\n        {icon && icon}\r\n        <p>{children}</p>\r\n      </div>\r\n      <i className=\"fas fa-chevron-right\"></i>\r\n    </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateFields.js",[],["147","148"],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/useForm.js",["149","150"],"import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport swal from 'sweetalert';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [slides, setSlide] = useState([{ url: '' }]);\r\n  const [thumbnail, setThumbnail] = useState({ url: '' });\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // validating selected files\r\n  const validateImage = (e) => {\r\n    // const filesArray = e.target.files;\r\n    const file = e.target.files[0];\r\n    const size = e.target.files[0].size;\r\n    const type = e.target.files[0].type;\r\n    const name = e.target.files[0].name;\r\n    // const extension = e.target.files[filesArray.length-1];\r\n\r\n    console.log(e.target.files);\r\n\r\n    // !e.target.files[0] ||\r\n    // !e.target.files[0].size ||\r\n    // !e.target.files[0].name.split(\".\")[1] ||\r\n    // !e.target.files[0].name.split(\".\")[0]\r\n\r\n    if (!file || !size || !type || !name) {\r\n\r\n      swal({\r\n        title: \"Error\",\r\n        text: \"File is not supported\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2500\r\n      });\r\n\r\n      return { error: 'error' }\r\n    } else {\r\n\r\n      // console.table(type);\r\n      /* check the file type */\r\n      if (type !== 'image/png' && type !== 'image/jpeg' && type !== 'image/jpg') {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Only .JPG and .PNG File Formats Allowed\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n        return { error: 'error' };\r\n      }\r\n\r\n      if (size > 1000000) {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Too Large. Image Should Be Less Than 1MB\",\r\n          icon: \"error\",\r\n          buttons: false,\r\n          timer: 2500\r\n        });\r\n  \r\n        return { error: 'error' }\r\n      }\r\n      \r\n      return { file , error: null };\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  const uploadImage = async (base64EncodedImage) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ data: base64EncodedImage }),\r\n          headers: {'Content-type': 'application/json'}\r\n        });\r\n        const data = await response.json();\r\n        resolve(data);\r\n      } catch(error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n  */\r\n\r\n  // handle slide change\r\n  const handleSlide = (e, index) => {\r\n    e.preventDefault();\r\n    \r\n    const { file, error } = validateImage(e);\r\n    \r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // console.log('image - ', reader.result);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          const list = [...slides];\r\n          list[index]['url'] = reader.result;\r\n          setSlide(list);\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle thumbnail change\r\n  const handleThumbnail = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { file, error } = validateImage(e);\r\n    if (error !== 'error') {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = async () => {\r\n\r\n        try {\r\n          setImageLoading(true);\r\n          // const resolvedImage = await uploadImage(reader.result);\r\n          // console.log(reader.result);\r\n          setThumbnail({ url: reader.result });\r\n          setImageLoading(false);\r\n        } catch(error) {\r\n          console.log('rejection error', error);\r\n        }\r\n\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // handle field array\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(thumbnail, slides));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  // handle field array\r\n  const handleRemoveClick = async (index, url) => {\r\n\r\n    // remove image item\r\n\r\n    // remove item from array\r\n    const list = [...slides];\r\n    list.splice(index, 1);\r\n    setSlide(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setSlide([...slides, { url: '' }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    imageLoading,\r\n    handleSlide,\r\n    handleThumbnail,\r\n    handleSubmit,\r\n    handleRemoveClick,\r\n    handleAddClick,\r\n    thumbnail,\r\n    slides,\r\n    setSlide,\r\n    setThumbnail,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/LoginModal.js",["151"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport style from './LoginModal.module.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { Formik, useField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport swal from 'sweetalert';\r\n\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport { ReactComponent as Close } from '../assets/close-icon.svg';\r\nimport { ACTIONS } from '../actions';\r\nimport { registerRequest, signInRequest } from '../api/api';\r\n\r\nexport default function LoginModal() {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { state, dispatch } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const handleLogin = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await signInRequest(values);\r\n            if (data) {\r\n                console.log(data);\r\n                dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data });\r\n                localStorage.setItem('accessToken', data.accessToken);\r\n                console.log('sign in success');\r\n                setLoading(false);\r\n                // redirect\r\n                history.push('/account');\r\n            }\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSignUp = async (values) => {\r\n        // console.log('sign up', values);\r\n        setLoading(true);\r\n        try {\r\n            const data = await registerRequest(values);\r\n            if (data) {\r\n                console.log(data);\r\n                dispatch({ type: ACTIONS.AUTH_SUCCESS, payload: data });\r\n                localStorage.setItem('accessToken', data.accessToken);\r\n                console.log('sign up success');\r\n                setLoading(false);\r\n            }\r\n            // redirect\r\n        } catch(error) {\r\n            dispatch({ type: ACTIONS.AUTH_ERROR });\r\n            setLoading(false);\r\n            swal({\r\n                title: `${error.error}`,\r\n                icon: \"error\",\r\n                text: \"try again\",\r\n                buttons: false,\r\n                timer: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if user logged in redirecting to the account\r\n        state.isAuthenticated && state.user && history.push('/account');\r\n\r\n        // console.log(state);\r\n        document.body.style.overflow = \"hidden\";\r\n        return () => {\r\n            document.body.style.overflow = \"visible\";\r\n        }\r\n    }, []);\r\n\r\n    const [componentState, setComponentState] = useState('signin');\r\n\r\n    const handleClose = (e, includeClass) => {\r\n        typeof e.target.className === \"string\" && \r\n        e.target.className !== \"\" && \r\n        e.target.className.split(' ').includes(includeClass) && history.push('/ads');\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={(e) => handleClose(e, 'wrapper')} className={`${style.modalWrapper} wrapper`}>\r\n            <div className={style.modalBody}>\r\n                {componentState === 'signin' \r\n                ? <SignIn \r\n                    loading={loading} \r\n                    handleLogin={handleLogin} \r\n                    setComponentState={setComponentState} \r\n                />\r\n                : <SignUp\r\n                    loading={loading}\r\n                    handleSignUp={handleSignUp} \r\n                    setComponentState={setComponentState} />\r\n                }\r\n            </div>\r\n        </div>,\r\n        document.getElementById('sideMenuPortal')\r\n    );\r\n}\r\n\r\nconst SignIn = ({ setComponentState, handleLogin, loading }) => {\r\n\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        : \r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Sign In to</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleLogin(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                </Formik>\r\n                <button onClick={() => setComponentState('signup')}>Create Account</button>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst SignUp = ({ setComponentState, loading, handleSignUp }) => {\r\n    return (\r\n        <>\r\n        {loading ? \r\n        <Spinner /> \r\n        :\r\n        <>\r\n            <div className={style.close}>\r\n                <Link to=\"/ads\"><Close /></Link>\r\n            </div>\r\n            <div className={style.content}>\r\n                <h1>Create Account</h1>\r\n                <img src={logo} alt=\"logo\" />\r\n                <Formik\r\n                    initialValues={{\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        email: Yup.string().email().required(),\r\n                        password: Yup.string().required()\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        handleSignUp(values);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"example@email.com\" />\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\" placeholder=\"********\" />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </Form>\r\n                </Formik>\r\n                <button onClick={() => setComponentState('signin')}>Sign in</button>\r\n                <p>Create your account to post ads</p>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst TextField = ({id, label, ...props}) => {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...field} {...props} className={`form-control ${meta.touched && meta.error ? `is-invalid` : null}`} />\r\n            {meta.touched && meta.error ? (\r\n                <div id={id} className=\"invalid-feedback\">\r\n                    {meta.error}\r\n                </div>\r\n            ): null}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/Account.js",["152"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport style from './account.module.scss';\r\nimport { textFilter } from '../../helpers/helpers';\r\n\r\nimport { getPostsByUser, updatePost } from '../../api/api';\r\nexport default function Account() {\r\n\r\n  const { state } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fetchPostsByUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const allPosts = await getPostsByUser(state.user.user._id);\r\n      console.log(allPosts);\r\n      setPosts(allPosts);\r\n      setLoading(false);\r\n    } catch(error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPostsByUser();\r\n  }, []);\r\n\r\n  return (\r\n    state.isAuthenticated && state.user ?\r\n    <>\r\n      <div className={style.wrapper}>\r\n      <div className={style.header}>\r\n          <p>Profile</p>\r\n          <div className={style.email}>\r\n            <i className=\"fas fa-user\"></i>\r\n            <p>{state.user && textFilter(state.user.user.email, 17)}</p>\r\n          </div>\r\n          <Link to=\"/create\" className={style.createButton}>Post New Ad</Link>\r\n        </div>\r\n        {loading ? <Spinner /> : <AdItems posts={posts} fetchPostsByUser={fetchPostsByUser} />}\r\n      </div>\r\n    </>\r\n    :\r\n    <Redirect to=\"/ads/sign-in\" />\r\n  );\r\n}\r\n\r\nconst AdItems = ({ posts, fetchPostsByUser }) => {\r\n\r\n  const mutateOffers = async (item) => {\r\n    try {\r\n      const updateOffer = {\r\n          offer: !item.offer\r\n      }\r\n      const updatedPost = await updatePost(item._id, updateOffer);\r\n      console.log(updatedPost);\r\n      fetchPostsByUser();\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    posts.length > 0 ?\r\n    posts.map((item, index) => {\r\n      return (\r\n        <div key={index} className={style.body}>\r\n        <div className={style.accordion}>\r\n          <div\r\n            className={style.card}\r\n            data-toggle=\"collapse\"\r\n            data-target={`#collapseExample${index}`}\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseExample\"\r\n          >\r\n            <img src={item.thumbnail} alt=\"img\" />\r\n            <p>{item.brandName}</p>\r\n            <i class=\"fas fa-chevron-down\"></i>\r\n          </div>\r\n    \r\n          <div className={`collapse ${style.collapse}`} id={`collapseExample${index}`}>\r\n            <div className={style.collapseWrapper}>\r\n              <div className={style.views}>\r\n                <p className={style.viewsAmount}>{item.analytics}</p>\r\n                <p>clicks</p>\r\n              </div>\r\n              <div className={style.offers}>\r\n                <p>Offers</p>\r\n                <div onClick={() => mutateOffers(item)}>\r\n                  {item.offer ? <button className={style.enabled}>Enabled</button> : <button className={style.disabled}>Disabled</button> }\r\n                </div>\r\n              </div>\r\n              <div className={style.buttons}>\r\n                <Link to={`/account/${item._id}/edit`}><button>Edit</button></Link>\r\n                <Link to={`/ads/${item._id}`}><button>View</button></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    })\r\n  :\r\n    <p>Create Your First Ad</p>\r\n  );\r\n}\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/helpers/helpers.js",["153"],"import { useEffect } from 'react';\r\n\r\nconst textFilter = (email, num) => {\r\n    if (email.length > num) {\r\n\r\n      // removing 17 characters from end\r\n      let newEmail = email.split(\"\");\r\n      let remove = newEmail.length - num;\r\n      newEmail.splice(-remove);\r\n\r\n      return newEmail;\r\n    } else {\r\n      return email;\r\n    }\r\n}\r\n\r\nconst copyToClipboard = (value) => {\r\n  let tempInput = document.createElement(\"input\");\r\n  tempInput.value = value;\r\n  document.body.appendChild(tempInput);\r\n  tempInput.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(tempInput);\r\n};\r\n\r\nexport {\r\n  textFilter, \r\n  copyToClipboard\r\n};","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/api/api.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/CreatePost.js",["154","155","156","157"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport logo from '../../../assets/logo.png';\r\nimport './CreatePost.scss';\r\nimport { createPost } from '../../../api/api';\r\nimport swal from 'sweetalert';\r\n\r\nimport FirstStep from './Steps/FirstStep';\r\nimport SecondStep from './Steps/SecondStep';\r\nimport ThirdStep from './Steps/ThirdStep';\r\nimport FourthStep from './Steps/FourthStep';\r\n\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function CreatePost() {\r\n    const [step, setStep] = useState(1);\r\n    const [firstValues, setFirstValues] = useState({});\r\n    const [secondValues, setSecondValues] = useState({});\r\n    const [thirdValues, setThirdValues] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { state } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const submitData = async () => {\r\n      const { category } = firstValues;\r\n      \r\n      const {\r\n        brandName,\r\n        number,\r\n        website,\r\n        facebook,\r\n        instagram,\r\n        twitter,\r\n        branches  \r\n      } = secondValues;\r\n\r\n      const { thumbnail, slide } = thirdValues;\r\n\r\n      const values = {\r\n        analytics: 1,\r\n        brandName,\r\n        category,\r\n        number,\r\n        website,\r\n        facebook,\r\n        instagram,\r\n        twitter,\r\n        thumbnail,\r\n        slide,\r\n        branches\r\n      };\r\n\r\n      // console.log(values);\r\n      try {\r\n        // console.log(values);\r\n        setLoading(true);\r\n        const data = await createPost(values);\r\n        setLoading(false);\r\n        console.log(data);\r\n      } catch(error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    const FormBody = ({ step }) => {\r\n      // eslint-disable-next-line default-case\r\n      switch (step) {\r\n        case 1:\r\n          return <FirstStep setStep={setStep} setFirstValues={setFirstValues} />;\r\n        case 2:\r\n          return (\r\n            <SecondStep firstValues={firstValues} setStep={setStep} setSecondValues={setSecondValues} />\r\n          );\r\n  \r\n        case 3:\r\n          return (\r\n            <ThirdStep\r\n              setStep={setStep}\r\n              setThirdValues={setThirdValues}\r\n            />\r\n          );\r\n        case 4:\r\n          return <FourthStep loading={loading} setLoading={setLoading} submitData={submitData} />;\r\n      }\r\n    }\r\n\r\n    const Stepper = () => {\r\n      return (\r\n        <div className=\"step-wrapper\">\r\n          <Steps value={1}>Category</Steps>\r\n          <Steps value={2}>Information</Steps>\r\n          <Steps value={3}>Upload Media</Steps>\r\n          <Steps value={4}>Submit</Steps>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const Steps = ({ children, value }) => {\r\n      return (\r\n        <div className=\"step\">\r\n          {value < step ? (\r\n            <i className=\"fas fa-check-circle\"></i>\r\n          ) : value === step ? (\r\n            <i className=\"fas fa-circle\"></i>\r\n          ) : (\r\n            <i className=\"far fa-circle\"></i>\r\n          )}\r\n  \r\n          <h1>{children}</h1>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"form-wrapper\">\r\n        <FormLeft>\r\n          <img src={logo} alt=\"mangofriend\" />\r\n          <Stepper step={step} />\r\n        </FormLeft>\r\n\r\n        <FormRight>\r\n          <FormBody step={step} />\r\n        </FormRight>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction FormLeft({ children }) {\r\n  return <div className=\"form-left\">{children}</div>;\r\n}\r\n\r\nfunction FormRight({ children }) {\r\n  return <div className=\"form-right\">{children}</div>;\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FirstStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/SecondStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/ThirdStep.js",["158"],"import React, {useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './ThirdStep.module.scss';\r\nimport useForm from '../../../../CustomForm/useForm';\r\nimport validate from '../../../../CustomForm/validateFields';\r\nimport { ReactSortable } from 'react-sortablejs';\r\n\r\nexport default function ThirdStep({ setStep, setThirdValues }) {\r\n\r\n  const [fieldError, setFieldError] = useState(false);\r\n  const {\r\n    imageLoading,\r\n    handleSlide,\r\n    handleThumbnail,\r\n    handleSubmit,\r\n    handleRemoveClick,\r\n    handleAddClick,\r\n    thumbnail,\r\n    slides,\r\n    setSlide,\r\n    errors,\r\n  } = useForm(submit, validate);\r\n\r\n  // form submission\r\n  function submit() {\r\n    const slidesArr = slides.map(slide => slide.url);\r\n    console.log('submitted slides', slidesArr);\r\n    console.log('thumbnail', thumbnail.url);\r\n    setThirdValues({ thumbnail: thumbnail.url, slide: slidesArr });\r\n    setStep(4);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    setFieldError(errors);\r\n    let timer = setTimeout(() => {\r\n      setFieldError({});\r\n    }, 3000)\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n  }, [errors]);\r\n\r\n  const Thumbnail = () => {\r\n    return (\r\n      <div className={style.thumbnailWrapper}>\r\n        <h1>Upload Post Thumbnail</h1>\r\n\r\n        {fieldError.thumbnail && (\r\n          <div className={`alert alert-danger ${style.error}`} role=\"alert\">\r\n            {fieldError.thumbnail}\r\n          </div>\r\n        )}\r\n        <div className={style.thumbnailItem}>\r\n          <div className=\"custom-file\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => handleThumbnail(e)}\r\n              className=\"custom-file-input\"\r\n              id=\"thumbnail\"\r\n            />\r\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n              Click here to select files\r\n            </label>\r\n          </div>\r\n          {thumbnail.url && <img draggable=\"false\" src={thumbnail.url} alt=\"thumbnail\" />}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Thumbnail />\r\n\r\n      {imageLoading ? <h1>Loading...</h1> : null}\r\n\r\n      <div className={style.slideWrapper}>\r\n        <h1 onClick={() => console.log(slides)}>Upload Post Slider</h1>\r\n        <p>You can Move and Reorder your images</p>\r\n\r\n      {fieldError.slides && (\r\n        <div className={`alert alert-danger ${style.error}`} role=\"alert\">\r\n          {fieldError.slides}\r\n        </div>\r\n      )}\r\n\r\n      <ReactSortable list={slides} setList={setSlide} animation={200}>\r\n          {slides.map(({ url }, index) => (\r\n                <div className={style.slideItem} key={index}>\r\n                  <div className=\"custom-file\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={(e) => handleSlide(e, index)}\r\n                      className=\"custom-file-input\"\r\n                      id=\"slide\"\r\n                    />\r\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                      Click here to select files\r\n                    </label>\r\n                  </div>\r\n                  {url && <img draggable=\"false\" src={url} alt=\"image\" />}\r\n                  \r\n                  <div className={style.buttonWrapper}>\r\n                    {slides.length !== 1 && (\r\n                      <button onClick={() => handleRemoveClick(index, url)}>\r\n                        <i className=\"fas fa-minus\"></i>\r\n                      </button>\r\n                    )}\r\n\r\n                    {slides.length < 4\r\n                      ? slides.length - 1 === index &&\r\n                      (\r\n                        <button onClick={handleAddClick}>\r\n                          <i className=\"fas fa-plus\"></i>\r\n                        </button>\r\n                      )\r\n                      : null}\r\n                  </div>\r\n\r\n                </div>\r\n          ))}\r\n      </ReactSortable>\r\n      </div>\r\n\r\n      <div className={style.formFooterButtons}>\r\n        <button type=\"submit\" onClick={(e) => handleSubmit(e)}>Continue</button>\r\n        <Link to=\"/account\"><button>Cancel</button></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/CreatePost/Steps/FourthStep.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Edit.js",["159","160","161","162"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport style from './edit.module.scss';\r\nimport { Link, useParams, Redirect } from 'react-router-dom';\r\n\r\nimport Overview from './Overview';\r\nimport Gallery from './Gallery';\r\n\r\n// import { Form, Formik, FieldArray, useField } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n// API\r\nimport { updatePost, getPostById } from '../../../api/api';\r\nimport { AuthContext } from '../../../Context/AuthContext';\r\n\r\nexport default function Edit() {\r\n\r\n    const { state } = useContext(AuthContext);\r\n\r\n    const [page, setPage] = useState('overview');\r\n    const [loading, setLoading] = useState(true);\r\n    const [initialData, setInitialData] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await getPostById(id);\r\n        setInitialData(data);\r\n        setLoading(false);\r\n      }\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        state.isAuthenticated && state.user ?\r\n        <>\r\n        {loading ?\r\n            <Spinner />\r\n        :\r\n            <div className={style.wrapper}>\r\n                <Navigation page={page} setPage={setPage} />\r\n                <Content page={page} setPage={setPage} initialData={initialData} currentPost={id} />\r\n            </div>\r\n        }\r\n        </>\r\n        :\r\n        <Redirect to=\"/ads/sign-in\" />\r\n    );\r\n}\r\n\r\nconst Navigation = ({ page, setPage }) => {\r\n    return (\r\n        <div className={style.navigation}>\r\n            <button className={page === 'overview' ? style.selected: undefined} onClick={() => setPage('overview')}>Overview</button>\r\n            <button className={page === 'gallery' ? style.selected: undefined} onClick={() => setPage('gallery')}>Gallery</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Content = ({ page, initialData, currentPost }) => {\r\n\r\n    const Page = () => {\r\n        switch (page) {\r\n            case 'overview':\r\n                return <Overview initialData={initialData} currentPost={currentPost} />                \r\n            case 'gallery':\r\n                return <Gallery initialData={initialData} currentPost={currentPost} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <Page />\r\n        </div>\r\n    );\r\n}\r\n\r\n// loading spinner\r\nconst Spinner = () => {\r\n    return (\r\n      <div className={`spinner ${style.spinner}`}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Gallery.js",["163","164","165"],"import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ReactSortable } from 'react-sortablejs';\r\nimport useForm from '../../../CustomForm/useForm';\r\nimport validate from '../../../CustomForm/validateEdit';\r\nimport swal from 'sweetalert';\r\nimport upload from '../../../assets/upload.png';\r\nimport style from './edit.module.scss';\r\n\r\nimport { updatePost } from '../../../api/api';\r\n\r\nconst Gallery = ({ initialData, currentPost }) => {\r\n\r\n    const { post : { slide, thumbnail } } = initialData;\r\n\r\n    // avoid ref equality\r\n    const MemSlide = useMemo(() => { \r\n      return { slide };\r\n    }\r\n    , [slide]);\r\n\r\n    // consuming use form hook\r\n    const { \r\n      handleSlide,\r\n      handleThumbnail,\r\n      handleSubmit,\r\n      handleRemoveClick,\r\n      handleAddClick,\r\n      slides,\r\n      thumbnail: initialThumbnail,\r\n      setSlide,\r\n      setThumbnail,\r\n      errors\r\n    } = useForm(submit, validate);\r\n\r\n    const handleUpdate = async (slidesArr, initialThumbnail) => {\r\n      const updateGallery = {\r\n        slide: slidesArr,\r\n        thumbnail: initialThumbnail.url\r\n      }\r\n\r\n      await updatePost(currentPost, updateGallery);\r\n    }\r\n\r\n    function submit() {\r\n      const slidesArr = slides.map(slide => slide.url);\r\n      handleUpdate(slidesArr, initialThumbnail);\r\n    }\r\n  \r\n  \r\n    const handleInitialState = (slide) => {\r\n      if (slide) {\r\n        const images = slide.map(item => {\r\n          return {url: item}\r\n        });\r\n  \r\n        setSlide(images);\r\n        setThumbnail({url: thumbnail})\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      handleInitialState(slide);\r\n    }, [MemSlide, thumbnail]);\r\n\r\n    useEffect(() => {\r\n      if (errors.slides) {\r\n      swal({\r\n        title: \"Error\",\r\n        text: errors.slides,\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2500\r\n      });\r\n    }\r\n      console.log('error 🎃', errors)\r\n    }, [errors])\r\n\r\n    const Thumbnail = () => {\r\n      return (\r\n        <div className={style.thumbnail}>\r\n          <h1>Thumbnail</h1>\r\n            {initialThumbnail && (<img src={initialThumbnail.url} alt=\"thumbnail\" />)}\r\n\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e) => handleThumbnail(e)}\r\n                  className=\"custom-file-input\"\r\n                />\r\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                  Upload\r\n                </label>\r\n              </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n      return (\r\n          <div className={style.gallery}>\r\n\r\n            <Thumbnail />\r\n            \r\n            <div className={style.slides}>\r\n              <h1 onClick={() => console.log(slides)}>Existing Slide</h1>\r\n                <ReactSortable className={style.slideImages} list={slides} setList={setSlide} animation={200}>\r\n                  {slides.map(({ url }, index) => url ? (\r\n                      <div className={style.card}>\r\n                        {url && <img src={url} alt=\"uploads\" />}\r\n                        <button className={style.cardButton} onClick={() => handleRemoveClick(index, url)}>Remove</button>\r\n                      </div>\r\n                  )\r\n                  : (\r\n                    <div className={style.uploadCard}>\r\n                      <div className=\"custom-file\">\r\n                        <input\r\n                          type=\"file\"\r\n                          onChange={(e) => handleSlide(e, index)}\r\n                          className=\"custom-file-input\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                          Upload\r\n                        </label>\r\n                      </div>\r\n\r\n                      <img src={upload} alt=\"uploads\" />\r\n                      \r\n                      <button className={style.cardButton} onClick={() => handleRemoveClick(index, url)}>Remove</button>\r\n                    </div>\r\n                  )\r\n                  )}\r\n                </ReactSortable>\r\n                {slides.length < 5 \r\n                ?  <div className={style.upload}>\r\n                <button onClick={handleAddClick}>Add</button>\r\n              </div> \r\n                : null}\r\n            </div>\r\n  \r\n\r\n\r\n            <div className={style.formFooterButtons}>\r\n                <button type=\"submit\" onClick={(e) => handleSubmit(e)}>Update Gallery</button>\r\n                <Link to=\"/account\"><button>Cancel</button></Link>\r\n            </div>\r\n          </div>\r\n      );\r\n}\r\n\r\nexport default Gallery;","/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/Components/Auth/EditPost/Overview.js",[],"/mnt/c/Users/Lakshan/Desktop/projects/development/hotbox-app/client/src/CustomForm/validateEdit.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":36,"column":21,"nodeType":"172","messageId":"173","endLine":36,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":71,"column":6,"nodeType":"176","endLine":71,"endColumn":8,"suggestions":"177"},{"ruleId":"170","severity":1,"message":"178","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"179","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":45},{"ruleId":"170","severity":1,"message":"180","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":14},{"ruleId":"170","severity":1,"message":"181","line":10,"column":31,"nodeType":"172","messageId":"173","endLine":10,"endColumn":41},{"ruleId":"166","replacedBy":"182"},{"ruleId":"168","replacedBy":"183"},{"ruleId":"166","replacedBy":"184"},{"ruleId":"168","replacedBy":"185"},{"ruleId":"170","severity":1,"message":"178","line":1,"column":44,"nodeType":"172","messageId":"173","endLine":1,"endColumn":52},{"ruleId":"170","severity":1,"message":"171","line":21,"column":11,"nodeType":"172","messageId":"173","endLine":21,"endColumn":16},{"ruleId":"170","severity":1,"message":"186","line":23,"column":11,"nodeType":"172","messageId":"173","endLine":23,"endColumn":22},{"ruleId":"170","severity":1,"message":"187","line":25,"column":23,"nodeType":"172","messageId":"173","endLine":25,"endColumn":37},{"ruleId":"170","severity":1,"message":"188","line":27,"column":10,"nodeType":"172","messageId":"173","endLine":27,"endColumn":17},{"ruleId":"170","severity":1,"message":"189","line":27,"column":19,"nodeType":"172","messageId":"173","endLine":27,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":82,"column":14,"nodeType":"192","endLine":82,"endColumn":29},{"ruleId":"170","severity":1,"message":"186","line":96,"column":11,"nodeType":"172","messageId":"173","endLine":96,"endColumn":22},{"ruleId":"166","replacedBy":"193"},{"ruleId":"168","replacedBy":"194"},{"ruleId":"170","severity":1,"message":"195","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":22},{"ruleId":"174","severity":1,"message":"196","line":173,"column":6,"nodeType":"176","endLine":173,"endColumn":14,"suggestions":"197"},{"ruleId":"174","severity":1,"message":"198","line":86,"column":8,"nodeType":"176","endLine":86,"endColumn":10,"suggestions":"199"},{"ruleId":"174","severity":1,"message":"200","line":29,"column":6,"nodeType":"176","endLine":29,"endColumn":8,"suggestions":"201"},{"ruleId":"170","severity":1,"message":"202","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":19},{"ruleId":"170","severity":1,"message":"202","line":1,"column":39,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"203","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":22,"column":13,"nodeType":"172","messageId":"173","endLine":22,"endColumn":18},{"ruleId":"170","severity":1,"message":"204","line":24,"column":9,"nodeType":"172","messageId":"173","endLine":24,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":102,"column":27,"nodeType":"207","endLine":102,"endColumn":74},{"ruleId":"170","severity":1,"message":"180","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"208","line":12,"column":10,"nodeType":"172","messageId":"173","endLine":12,"endColumn":20},{"ruleId":"174","severity":1,"message":"209","line":33,"column":8,"nodeType":"176","endLine":33,"endColumn":10,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":64,"column":9,"nodeType":"213","messageId":"214","endLine":69,"endColumn":10},{"ruleId":"170","severity":1,"message":"178","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"215","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":49},{"ruleId":"174","severity":1,"message":"216","line":64,"column":8,"nodeType":"176","endLine":64,"endColumn":29,"suggestions":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'useState' is defined but never used.","'useMemo' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.",["218"],["219"],["218"],["219"],"'setFeedData' is assigned a value but never used.","'setSuggestions' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["218"],["219"],"'uuidv4' is defined but never used.","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["221"],"React Hook useEffect has missing dependencies: 'history', 'state.isAuthenticated', and 'state.user'. Either include them or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'fetchPostsByUser'. Either include it or remove the dependency array.",["223"],"'useEffect' is defined but never used.","'swal' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'updatePost' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["224"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'handleInitialState' and 'slide'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [loadUser]",{"range":"238","text":"239"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"240","text":"241"},"Update the dependencies array to be: [history, state.isAuthenticated, state.user]",{"range":"242","text":"243"},"Update the dependencies array to be: [fetchPostsByUser]",{"range":"244","text":"245"},"Update the dependencies array to be: [id]",{"range":"246","text":"247"},"Update the dependencies array to be: [MemSlide, handleInitialState, slide, thumbnail]",{"range":"248","text":"249"},[1994,1996],"[loadUser]",[4481,4489],"[callback, errors, isSubmitting]",[2833,2835],"[history, state.isAuthenticated, state.user]",[881,883],"[fetchPostsByUser]",[960,962],"[id]",[1679,1700],"[MemSlide, handleInitialState, slide, thumbnail]"]